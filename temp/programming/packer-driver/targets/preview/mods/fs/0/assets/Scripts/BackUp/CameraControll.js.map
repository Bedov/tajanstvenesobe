{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/BackUp/CameraControll.ts"],"names":["_decorator","Component","Node","Vec3","SystemEvent","systemEvent","Quat","ccclass","property","CameraControll","type","onKeyDown","console","log","onMouseMove","event","getDeltaX","currentVector","toEuler","node","getRotation","getDeltaY","tempXrotation","x","_sensitivity","tempYrotation","y","setRotationFromEuler","z","onLoad","on","EventType","MOUSE_DOWN","MOUSE_MOVE","KEY_DOWN","start"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,W,OAAAA,W;AAA2CC,MAAAA,I,OAAAA,I;;;;;;;OAC9F;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;gCAKaS,c,WADZF,OAAO,CAAC,gBAAD,C,UAGHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER;AAAP,OAAD,C,oCAHb,MACaO,cADb,SACoCR,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,6CAUvB,CAVuB;;AAAA,gDAYnB,GAZmB;;AAAA,kDAczB,KAdyB;AAAA;;AAgB1C;AACA;AAEA;AACA;AACA;AAEAU,QAAAA,SAAS,GAAG;AACRC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEH;;AAEDC,QAAAA,WAAW,CAACC,KAAD,EAAoB;AAC3BH,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBE,KAAK,CAACC,SAA1B,GAAsC,CAAlD;AACA,cAAIC,aAAa,GAAG,IAAId,IAAJ,EAApB,CAF2B,CAEG;;AAE9BG,UAAAA,IAAI,CAACY,OAAL,CAAaD,aAAb,EAA4B,KAAKE,IAAL,CAAUC,WAAV,EAA5B,EAAqD,IAArD;AAEA,cAAGL,KAAK,CAACM,SAAN,KAAoB,EAApB,IAA0BN,KAAK,CAACC,SAAN,KAAoB,EAAjD,EACI,OAPuB,CAS3B;;AACA,cAAIM,aAAa,GAAGL,aAAa,CAACM,CAAd,GAAkBR,KAAK,CAACM,SAAN,KAAoB,KAAKG,YAA/D;;AACA,cAAIC,aAAa,GAAGR,aAAa,CAACS,CAAd,GAAkBX,KAAK,CAACC,SAAN,KAAoB,KAAKQ,YAA/D;;AAEA,eAAKL,IAAL,CAAUQ,oBAAV,CAAgCL,aAAhC,EAA+CG,aAA/C,EAA+DR,aAAa,CAACW,CAA7E;AAEH;;AAGDC,QAAAA,MAAM,GAAG;AACL,eAAKV,IAAL,CAAUW,EAAV,CAAa5B,IAAI,CAAC6B,SAAL,CAAeC,UAA5B,EAAyCjB,KAAD,IAAuB;AAC3DH,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,WAFH,EAEK,IAFL;AAIE,eAAKM,IAAL,CAAUW,EAAV,CAAa,WAAb,EAA0B,UAAUf,KAAV,EAA6B;AACrDH,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,WAFD,EAEG,IAFH;AAIFR,UAAAA,WAAW,CAACyB,EAAZ,CAAe1B,WAAW,CAAC2B,SAAZ,CAAsBE,UAArC,EAAiD,KAAKnB,WAAtD,EAAmE,IAAnE,EATK,CAUL;;AAGAT,UAAAA,WAAW,CAACyB,EAAZ,CAAe1B,WAAW,CAAC2B,SAAZ,CAAsBG,QAArC,EAA+C,KAAKvB,SAApD,EAA+D,IAA/D;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK;;AAEDwB,QAAAA,KAAK,GAAI,CACL;AACH,SAlGyC,CAoG1C;AACA;AACA;;;AAtG0C,O;;;;;iBAGP,I;;2FAElC3B,Q;;;;;iBACyB,I;;iFAEzBA,Q;;;;;iBACe,IAAIL,IAAJ,E;;;AAgGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, Vec3, SystemEvent, systemEvent, log, Event, EventMouse, math, Quat, TERRAIN_HEIGHT_BASE } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = CameraControll\r\n * DateTime = Thu Nov 04 2021 15:54:44 GMT+0100 (Central European Standard Time)\r\n * Author = stickandrope\r\n * FileBasename = CameraControll.ts\r\n * FileBasenameNoExtension = CameraControll\r\n * URL = db://assets/Scripts/CameraControll.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n\r\n\r\n \r\n@ccclass('CameraControll')\r\nexport class CameraControll extends Component {\r\n\r\n    @property({type: Node})\r\n    public followTarget: Node | null = null;\r\n\r\n    @property\r\n    public isFollowRotation = true;\r\n\r\n    @property\r\n    public offset = new Vec3();\r\n    public moveSpeed = 3;\r\n\r\n    private _sensitivity = 0.1;\r\n\r\n    isPlayingStart = false;\r\n\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n\r\n    onKeyDown() {\r\n        console.log(\"WAKA\");\r\n        \r\n    }\r\n\r\n    onMouseMove(event: EventMouse) {\r\n        console.log(\" Mouse event + \" + event.getDeltaX + 1);\r\n        var currentVector = new Vec3; // = math.Quat.toEuler( this.node.getRotation()  );\r\n        \r\n        Quat.toEuler(currentVector, this.node.getRotation(), true);\r\n\r\n        if(event.getDeltaY() > 40 || event.getDeltaX() > 40 )\r\n            return;\r\n\r\n        //this.node.setWorldRotationFromEuler\r\n        var tempXrotation = currentVector.x + event.getDeltaY() * this._sensitivity;\r\n        var tempYrotation = currentVector.y - event.getDeltaX() * this._sensitivity;\r\n\r\n        this.node.setRotationFromEuler( tempXrotation, tempYrotation , currentVector.z);\r\n\r\n    }\r\n\r\n\r\n    onLoad() {\r\n        this.node.on(Node.EventType.MOUSE_DOWN, (event: EventMouse) => {\r\n            console.log('Mouse down');\r\n          }, this);\r\n\r\n          this.node.on('mousedown', function (event: EventMouse) {\r\n            console.log('Mouse down');\r\n          }, this);\r\n\r\n        systemEvent.on(SystemEvent.EventType.MOUSE_MOVE, this.onMouseMove, this);\r\n        //systemEvent.on(Node.EventType.MOUSE_LEAVE, this.onMouseMove, this)\r\n        \r\n\r\n        systemEvent.on(SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n\r\n        /*this.node.on(Node.EventType.MOUSE_DOWN, function (event) {\r\n            log('Drag stated ...');\r\n        }, this);\r\n        this.node.on(Node.EventType.MOUSE_MOVE, function (event) {\r\n            if (!this._down) {\r\n                event.stopPropagation();\r\n                return\r\n            }\r\n            this.node.opacity = 255;\r\n            var delta = event.getDelta();\r\n            this.node.x += delta.x;\r\n            this.node.y += delta.y;\r\n            if (!this.propagate)\r\n                event.stopPropagation();\r\n        }, this);\r\n        this.node.on(cc.Node.EventType.MOUSE_LEAVE, function (event) {\r\n            if (!this._down) {\r\n                event.stopPropagation();\r\n                return\r\n            }\r\n            this.node.opacity = 160;\r\n            cc.log('Drag leave ...');\r\n            this._down = false;\r\n        }, this);\r\n        this.node.on(cc.Node.EventType.MOUSE_UP, function (event) {\r\n            if (!this._down) {\r\n                event.stopPropagation();\r\n                return\r\n            }\r\n            cc.log('Drag done ...');\r\n            this.node.opacity = 160;\r\n            this._down = false;\r\n        }, this);   */\r\n    }\r\n\r\n    start () {\r\n        // [3]\r\n    }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n/**\r\n * \r\n * var TouchDragger = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        propagate: {\r\n            default: false\r\n        },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._down = false;\r\n        this.node.opacity = 160;\r\n        this.node.on(cc.Node.EventType.MOUSE_DOWN, function (event) {\r\n            cc.log('Drag stated ...');\r\n            this.node.opacity = 255;\r\n            this._down = true;\r\n            if (!this.propagate)\r\n                event.stopPropagation();\r\n        }, this);\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, function (event) {\r\n            if (!this._down) {\r\n                event.stopPropagation();\r\n                return\r\n            }\r\n            this.node.opacity = 255;\r\n            var delta = event.getDelta();\r\n            this.node.x += delta.x;\r\n            this.node.y += delta.y;\r\n            if (!this.propagate)\r\n                event.stopPropagation();\r\n        }, this);\r\n        this.node.on(cc.Node.EventType.MOUSE_LEAVE, function (event) {\r\n            if (!this._down) {\r\n                event.stopPropagation();\r\n                return\r\n            }\r\n            this.node.opacity = 160;\r\n            cc.log('Drag leave ...');\r\n            this._down = false;\r\n        }, this);\r\n        this.node.on(cc.Node.EventType.MOUSE_UP, function (event) {\r\n            if (!this._down) {\r\n                event.stopPropagation();\r\n                return\r\n            }\r\n            cc.log('Drag done ...');\r\n            this.node.opacity = 160;\r\n            this._down = false;\r\n        }, this);\r\n    },\r\n});\r\n\r\n\r\n\r\n\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}