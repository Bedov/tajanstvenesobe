{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/Utilities/TopCameraLook.ts"],"names":["_decorator","Component","Node","Vec3","Quat","systemEvent","SystemEvent","FirstPersonCameraMovement","GameManager","GameStatuType","SlideRotateCamera","ccclass","property","TopCameraLook","start","on","EventType","TOUCH_MOVE","onTouchMove","e","even","pin","active","delta","getDelta","x","y","getInstance","WorldRoot","parent","rotation","rotateY","Math","PI","playAnimationTop","getComponent","enabled","gameStatus","gameActive","node","position","tempPosition","lerpCounter","lerpCounterParrent","tempZeroQuat","fromEuler","worldPosition","tempPinPosition","gamePaused","targetPositionVector","multiplyScalar","distanceScale","startedPositionVector","targetRotationVectorQuat","eulerRotation","z","startedRotationVectorQuat","update","deltaTime","lerp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAsCC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,W,OAAAA,W;;AACtFC,MAAAA,yB,iBAAAA,yB;;AACAC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,a,iBAAAA,a;;AACbC,MAAAA,iB,iBAAAA,iB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;+BAGaa,a,WADZF,OAAO,CAAC,eAAD,C,UAOHC,QAAQ,CAACT,IAAD,C,UAGRS,QAAQ,CAACV,IAAD,C,oCAVb,MACaW,aADb,SACmCZ,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,8CAY5B,IAZ4B;;AAAA,yDAajB,IAAIE,IAAJ,EAbiB;;AAAA,wDAclB,IAAIA,IAAJ,EAdkB;;AAAA,yDAejB,IAAIA,IAAJ,EAfiB;;AAAA,wDAgBlB,IAAIA,IAAJ,EAhBkB;;AAAA,+CAiB3B,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAjB2B;;AAAA,+CAkB3B,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAlB2B;;AAAA,+CAmB3B,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAnB2B;;AAAA,+CAoB3B,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,EAAf,CApB2B;;AAAA,+CAqB3B,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,EAAf,CArB2B;;AAAA,+CAsB3B,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,EAAf,CAtB2B;;AAAA,6DAuBb,IAAIC,IAAJ,EAvBa;;AAAA,4DAwBd,IAAIA,IAAJ,EAxBc;;AAAA,+CA2B3B,CA3B2B;;AAAA,sDA4BpB,CA5BoB;;AAAA,qDA6BrB,GA7BqB;;AAAA,8CA8B5B,CA9B4B;;AAAA,gDAgC1B,IAAID,IAAJ,CAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAhC0B;;AAAA,mDAiCvB,IAAIA,IAAJ,CAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAjCuB;AAAA;;AAmCzCW,QAAAA,KAAK,GAAG;AAENT,UAAAA,WAAW,CAACU,EAAZ,CAAeT,WAAW,CAACU,SAAZ,CAAsBC,UAArC,EAAiD,KAAKC,WAAtD,EAAmE,IAAnE,EAFM,CAGN;AACA;AACH;;AAEDA,QAAAA,WAAW,CAAEC,CAAF,EAAUC,IAAV,EAAqB;AAC9B,cAAI,CAAC,KAAKC,GAAL,CAAUC,MAAf,EAAwB;AACpB;AACH;;AAED,cAAMC,KAAK,GAAGJ,CAAC,CAACK,QAAF,EAAd;AACA,cAAM;AAACC,YAAAA,CAAD;AAAIC,YAAAA;AAAJ,cAAQH,KAAd;AAEA,cAAG;AAAA;AAAA,0CAAYI,WAAZ,GAA0BC,SAA1B,CAAqCC,MAAxC,EACE;AAAA;AAAA,0CAAYF,WAAZ,GAA0BC,SAA1B,CAAqCC,MAArC,CAA6CC,QAA7C,GAAsD1B,IAAI,CAAC2B,OAAL,CAAa,IAAI3B,IAAJ,EAAb,EAAwB;AAAA;AAAA,0CAAYuB,WAAZ,GAA0BC,SAA1B,CAAqCC,MAArC,CAA6CC,QAArE,EAA+EL,CAAC,GAACO,IAAI,CAACC,EAAP,GAAU,GAAzF,CAAtD,CADF,KAGE;AAAA;AAAA,0CAAYN,WAAZ,GAA0BC,SAA1B,CAAqCE,QAArC,GAA8C1B,IAAI,CAAC2B,OAAL,CAAa,IAAI3B,IAAJ,EAAb,EAAwB;AAAA;AAAA,0CAAYuB,WAAZ,GAA0BC,SAA1B,CAAqCE,QAA7D,EAAuEL,CAAC,GAACO,IAAI,CAACC,EAAP,GAAU,GAAjF,CAA9C;AAEL;;AAGGC,QAAAA,gBAAgB,GAAG;AAGf,cAAG,KAAKC,YAAL;AAAA;AAAA,sEAA8CC,OAA9C,IAAyD,KAA5D,EAAmE;AAEjE;AAAA;AAAA,4CAAYT,WAAZ,GAA0BU,UAA1B,GAAuC;AAAA;AAAA,gDAAcC,UAArD;AAEE,iBAAKH,YAAL;AAAA;AAAA,wEAA8CC,OAA9C,GAAwD,IAAxD;AACA,iBAAKD,YAAL;AAAA;AAAA,wDAAsCC,OAAtC,GAAgD,IAAhD;AAEA,gBAAG,KAAKf,GAAR,EACE,KAAKA,GAAL,CAASC,MAAT,GAAkB,KAAlB;AAEF,iBAAKiB,IAAL,CAAUC,QAAV,GAAqB,KAAKC,YAA1B;AACA,iBAAKC,WAAL,GAAmB,CAAnB;AACA,iBAAKC,kBAAL,GAA0B,CAA1B,CAZ+D,CAc/D;;AACA,gBAAIC,YAAiB,GAAG,IAAIxC,IAAJ,EAAxB;AACAA,YAAAA,IAAI,CAACyC,SAAL,CAAeD,YAAf,EAA6B,CAA7B,EAA+B,CAA/B,EAAiC,CAAjC;AAEA,gBAAG;AAAA;AAAA,4CAAYjB,WAAZ,GAA0BC,SAA1B,CAAqCC,MAAxC,EACA;AAAA;AAAA,4CAAYF,WAAZ,GAA0BC,SAA1B,CAAqCC,MAArC,CAA6CC,QAA7C,GAAuDc,YAAvD,CADA,KAGA;AAAA;AAAA,4CAAYjB,WAAZ,GAA0BC,SAA1B,CAAqCE,QAArC,GAA+Cc,YAA/C;AAEH,WAvBD,MAuBO;AAEL,gBAAG,KAAKvB,GAAR,EAAY;AACV,mBAAKA,GAAL,CAASC,MAAT,GAAkB,IAAlB;AACA,mBAAKD,GAAL,CAASyB,aAAT,GAAyB,IAAI3C,IAAJ,CAAS,KAAKoC,IAAL,CAAUO,aAAnB,CAAzB;AACD;;AAED,iBAAKL,YAAL,GAAoB,IAAItC,IAAJ,CAAS,KAAKoC,IAAL,CAAUC,QAAnB,CAApB;AACA,iBAAKO,eAAL,GAAuB,IAAI5C,IAAJ,CAAS,KAAKoC,IAAL,CAAUO,aAAnB,CAAvB;AAIA,iBAAKX,YAAL;AAAA;AAAA,wEAA8CC,OAA9C,GAAwD,KAAxD;AACA,iBAAKD,YAAL;AAAA;AAAA,wDAAsCC,OAAtC,GAAgD,KAAhD;AAGA;AAAA;AAAA,4CAAYT,WAAZ,GAA0BU,UAA1B,GAAuC;AAAA;AAAA,gDAAcW,UAArD;AAEA,iBAAKN,WAAL,GAAmB,CAAnB;AACA,iBAAKO,oBAAL,GAA4B,IAAI9C,IAAJ,CAAS,CAAC,KAAV,EAAkB,KAAlB,EAAyB,KAAzB,CAA5B;AACA,iBAAK8C,oBAAL,CAA0BC,cAA1B,CAAyC,KAAKC,aAA9C;AACA,iBAAKC,qBAAL,GAA6B,KAAKb,IAAL,CAAUC,QAAvC;AACApC,YAAAA,IAAI,CAACyC,SAAL,CAAe,KAAKQ,wBAApB,EAA8C,KAAKC,aAAL,CAAmB7B,CAAjE,EAAoE,KAAK6B,aAAL,CAAmB5B,CAAvF,EAA0F,KAAK4B,aAAL,CAAmBC,CAA7G;AACA,iBAAKC,yBAAL,GAAiC,KAAKjB,IAAL,CAAUT,QAA3C;AAID;AACF;;AAED2B,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACxB,eAAKhB,WAAL,IAAoBgB,SAApB;AACA,eAAKf,kBAAL,IAA2Be,SAA3B;;AAEA,cAAI,KAAKhB,WAAL,GAAmB,GAAvB,EAA4B;AAC1BvC,YAAAA,IAAI,CAACwD,IAAL,CAAU,KAAKpB,IAAL,CAAUC,QAApB,EAA8B,KAAKY,qBAAnC,EAA0D,KAAKH,oBAA/D,EAAqF,KAAKP,WAA1F;AACA,iBAAKH,IAAL,CAAUC,QAAV,GAAoB,KAAKD,IAAL,CAAUC,QAA9B;AACApC,YAAAA,IAAI,CAACuD,IAAL,CAAU,KAAKpB,IAAL,CAAUT,QAApB,EAA+B,KAAK0B,yBAApC,EAA+D,KAAKH,wBAApE,EAA8F,KAAKX,WAAnG;AACA,iBAAKH,IAAL,CAAUT,QAAV,GAAqB,KAAKS,IAAL,CAAUT,QAA/B;AACD,WATuB,CAWxB;AAEF;AACA;AACC;AAEC;AACA;AACA;;AAED;;AAvIsC,O,wFAGxClB,Q;;;;;iBACe,C;;;;;;;iBAGA,IAAIT,IAAJ,CAAS,CAAC,MAAV,EAAkB,CAAC,MAAnB,EAA2B,KAA3B,C;;;;;;;;AAmIpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, Vec3, Quat, TiledObjectGroup, Prefab, Game, systemEvent, SystemEvent } from 'cc';\r\nimport { FirstPersonCameraMovement } from '../FirstPersonCameraMovement';\r\nimport { GameManager, GameStatuType } from '../GameManager';\r\nimport { SlideRotateCamera } from '../SlideRotateCamera';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = TopCameraLook\r\n * DateTime = Fri Dec 24 2021 15:57:41 GMT+0100 (Central European Standard Time)\r\n * Author = stickandrope\r\n * FileBasename = TopCameraLook.ts\r\n * FileBasenameNoExtension = TopCameraLook\r\n * URL = db://assets/Scripts/Utilities/TopCameraLook.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\r\n *\r\n */\r\n \r\n@ccclass('TopCameraLook')\r\nexport class TopCameraLook extends Component {\r\n\r\n\r\n    @property\r\n    distanceScale = 1;\r\n\r\n    @property(Vec3)\r\n    eulerRotation = new Vec3(-30.962, -59.879, 3.898);\r\n    \r\n    @property(Node)\r\n    pin?: Node ;\r\n\r\n    mainCamera = null;\r\n    startedPositionVector = new Vec3();\r\n    targetPositionVector = new Vec3();\r\n    startedRotationVector = new Vec3();\r\n    targetRotationVector = new Vec3();\r\n    page1Vector = new Vec3(0, 0, 0);\r\n    page2Vector = new Vec3(0, 0, 5);\r\n    page3Vector = new Vec3(0, 0, 9);\r\n    page4Vector = new Vec3(0, 0, 15);\r\n    page5Vector = new Vec3(0, 0, 18);\r\n    page6Vector = new Vec3(0, 0, 25);\r\n    startedRotationVectorQuat = new Quat();\r\n    targetRotationVectorQuat = new Quat();\r\n\r\n    \r\n    lerpCounter = 1;\r\n    lerpCounterParrent = 1;\r\n    lerpLenghtParrent = 0.1;\r\n    lerpLenght = 1;\r\n\r\n    tempPosition = new Vec3(0,0,0);\r\n    tempPinPosition = new Vec3(0,0,0);\r\n\r\n    start() {\r\n\r\n      systemEvent.on(SystemEvent.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n      //Vec3.copy(this._euler, this.node.eulerAngles);\r\n      //Vec3.copy(this._position, this.node.position);\r\n  }\r\n\r\n  onTouchMove (e: any, even: any) {\r\n    if( !this.pin!.active ) {\r\n        return;\r\n    }\r\n\r\n    const delta = e.getDelta();\r\n    const {x, y}= delta;\r\n\r\n    if(GameManager.getInstance().WorldRoot!.parent)\r\n      GameManager.getInstance().WorldRoot!.parent!.rotation=Quat.rotateY(new Quat(),GameManager.getInstance().WorldRoot!.parent!.rotation, x*Math.PI/180);\r\n    else  \r\n      GameManager.getInstance().WorldRoot!.rotation=Quat.rotateY(new Quat(),GameManager.getInstance().WorldRoot!.rotation, x*Math.PI/180);\r\n\r\n}\r\n\r\n\r\n    playAnimationTop() {\r\n        \r\n\r\n        if(this.getComponent(FirstPersonCameraMovement)!.enabled == false) {\r\n\r\n          GameManager.getInstance().gameStatus = GameStatuType.gameActive;\r\n\r\n            this.getComponent(FirstPersonCameraMovement)!.enabled = true; \r\n            this.getComponent(SlideRotateCamera)!.enabled = true;\r\n\r\n            if(this.pin)\r\n              this.pin.active = false;\r\n\r\n            this.node.position = this.tempPosition;\r\n            this.lerpCounter = 1;\r\n            this.lerpCounterParrent = 1;\r\n\r\n            //Vracamo rotaciju parent sveta na nulu\r\n            var tempZeroQuat:Quat = new Quat;\r\n            Quat.fromEuler(tempZeroQuat, 0,0,0);\r\n\r\n            if(GameManager.getInstance().WorldRoot!.parent)\r\n            GameManager.getInstance().WorldRoot!.parent!.rotation= tempZeroQuat;\r\n          else  \r\n            GameManager.getInstance().WorldRoot!.rotation= tempZeroQuat;\r\n\r\n        } else {\r\n\r\n          if(this.pin){\r\n            this.pin.active = true;\r\n            this.pin.worldPosition = new Vec3(this.node.worldPosition);\r\n          }\r\n\r\n          this.tempPosition = new Vec3(this.node.position);\r\n          this.tempPinPosition = new Vec3(this.node.worldPosition);\r\n\r\n\r\n\r\n          this.getComponent(FirstPersonCameraMovement)!.enabled = false; \r\n          this.getComponent(SlideRotateCamera)!.enabled = false;\r\n\r\n          \r\n          GameManager.getInstance().gameStatus = GameStatuType.gamePaused;\r\n\r\n          this.lerpCounter = 0;\r\n          this.targetPositionVector = new Vec3(-4.953 , 4.293, 2.537);\r\n          this.targetPositionVector.multiplyScalar(this.distanceScale);\r\n          this.startedPositionVector = this.node.position;\r\n          Quat.fromEuler(this.targetRotationVectorQuat, this.eulerRotation.x, this.eulerRotation.y, this.eulerRotation.z);\r\n          this.startedRotationVectorQuat = this.node.rotation;\r\n\r\n\r\n\r\n        }\r\n      }\r\n\r\n      update(deltaTime: number) {\r\n        this.lerpCounter += deltaTime;\r\n        this.lerpCounterParrent += deltaTime;\r\n\r\n        if (this.lerpCounter < 0.7) {\r\n          Vec3.lerp(this.node.position, this.startedPositionVector, this.targetPositionVector, this.lerpCounter);\r\n          this.node.position= this.node.position;\r\n          Quat.lerp(this.node.rotation , this.startedRotationVectorQuat, this.targetRotationVectorQuat, this.lerpCounter);\r\n          this.node.rotation = this.node.rotation;\r\n        }\r\n\r\n        //GameManager.getInstance().WorldRoot?.rotate(Quat.x)\r\n        \r\n      //Quat.rotateY(GameManager.getInstance().WorldRoot!.rotation, GameManager.getInstance().WorldRoot!.rotation, 0.5);\r\n      //Quat.rotateAround(this.node.rotation, GameManager.getInstance().WorldRoot.position ,Vec3.UP,0.5);\r\n       //this.node.lookAt(this.target.position);\r\n\r\n        //if(this.pin.active == true) {\r\n        //  this.pin.position = this.tempPosition;\r\n        //}\r\n\r\n      }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}