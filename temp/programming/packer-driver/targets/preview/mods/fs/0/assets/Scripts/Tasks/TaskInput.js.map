{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/Tasks/TaskInput.ts"],"names":["_decorator","AudioSource","randomRangeInt","Task","GameManager","GenericUIinput","ccclass","property","TaskInput","String","Number","Array","start","schedule","isItMyTimeForDownloading","audioSource","node","getComponent","scheduleOnce","fillQuestionsShownFalse","orderNumber","questionsTempArray","forEach","element","questionsShown","push","getInstance","downloadedCheckpoint","downloadStarted","getQuestions","unschedule","remoteName","jsonLoader","fetchQuestions","expectedQuestions","getRandomTask","imamoNekoriscene","nasaoNekoriscenog","randomIndex","length","console","log","printDownloadStatus","showTask","isItOkToExecute","loadingHandler","turnOnLoading","turnOffLoading","taskManager","genericUIinput","active","turnOnGenericTask"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, AudioSource, director, Collider, Animation, random, randomRangeInt } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nimport { TaskManager } from \"./TaskManager\";\r\nimport { ScriptEffects } from \"../Utilities/ScriptEffects\";\r\nimport { GenericUI } from \"../Utilities/GenericUI\";\r\nimport { GenericUIABC } from \"../Utilities/GenericUI-ABC\";\r\nimport { Task } from './Task';\r\n\r\nimport { JSONloader, JSONtask2 } from \"../RemoteScripts/JSONloader\";\r\nimport { JSONtask1 } from \"../RemoteScripts/JSONloader\";\r\nimport { GameManager } from '../GameManager';\r\nimport { GenericUIinput } from '../Utilities/GenericUI-Input';\r\n@ccclass('TaskInput')\r\nexport class TaskInput extends Task {\r\n\r\n    @property(String)\r\n    remoteName!: String;\r\n\r\n    @property(Number)\r\n    expectedQuestions!: Number;\r\n\r\n\r\n    questionsTempArray : Array<JSONtask1> = new Array<JSONtask1>();\r\n\r\n    questionsShown : Array<boolean> = new Array<boolean>();\r\n    questionShownFilled = false;\r\n\r\n    private audioSource: AudioSource = null!;\r\n   \r\n\r\n    start () {\r\n        this.schedule(this.isItMyTimeForDownloading, 0.1);\r\n\r\n        this.audioSource = this.node.getComponent(AudioSource)!;\r\n        \r\n        this.scheduleOnce(this.fillQuestionsShownFalse, this.orderNumber * 0.05 + 2);\r\n    }\r\n\r\n    fillQuestionsShownFalse() {\r\n        this.questionsTempArray.forEach(element => {\r\n            this.questionsShown.push(false);\r\n             \r\n        });\r\n    }\r\n\r\n    isItMyTimeForDownloading() {\r\n        if(this.orderNumber <= GameManager.getInstance().downloadedCheckpoint && !this.downloadStarted ) {\r\n            this.getQuestions();\r\n            this.downloadStarted = true;\r\n            this.unschedule(this.isItMyTimeForDownloading);\r\n        }\r\n    }\r\n\r\n    getQuestions() {\r\n        if(this.remoteName != \"\") {\r\n             GameManager.getInstance().jsonLoader?.fetchQuestions(this.remoteName, this.questionsTempArray, this.expectedQuestions)!;\r\n \r\n        }\r\n    }\r\n\r\n    \r\n    getRandomTask() {\r\n        var imamoNekoriscene = false;\r\n        var nasaoNekoriscenog = false;\r\n        var randomIndex = randomRangeInt(0, this.questionsShown.length);\r\n   \r\n\r\n        this.questionsShown.forEach(element => {\r\n            if(element == false)\r\n                imamoNekoriscene = true;\r\n        });\r\n\r\n        console.log(\"imamoNekoriscene: \" + imamoNekoriscene);\r\n        \r\n        if(imamoNekoriscene) {\r\n            while(!nasaoNekoriscenog) {\r\n                randomIndex = randomRangeInt(0, this.questionsShown.length);\r\n                if( !this.questionsShown[randomIndex])\r\n                    nasaoNekoriscenog = true;\r\n            }\r\n            \r\n        }\r\n        console.log(\"QUESTION ARRAY LENGHT\" +  this.questionsShown.length);\r\n        console.log(\"randomIndex: \" + randomIndex);\r\n\r\n        this.questionsShown[randomIndex] = true;\r\n\r\n        return this.questionsTempArray[randomIndex];\r\n    }\r\n\r\n    printDownloadStatus(){\r\n        console.log(\"DownloadedCheckpoint : \" + GameManager.getInstance().downloadedCheckpoint);\r\n        console.log(\"this.orderNumber : \" + this.orderNumber);\r\n    }\r\n\r\n    showTask () {\r\n        \r\n        if(this.isItOkToExecute()) {\r\n            if(GameManager.getInstance().downloadedCheckpoint <= this.orderNumber) {\r\n                GameManager.getInstance().loadingHandler?.turnOnLoading();\r\n                this.scheduleOnce(this.showTask, 0.2);\r\n\r\n                return;\r\n            }\r\n\r\n            GameManager.getInstance().loadingHandler?.turnOffLoading();\r\n\r\n            this.taskManager.genericUIinput!.active = true;\r\n\r\n            this.taskManager.genericUIinput!.getComponent(GenericUIinput)!.turnOnGenericTask(this.node); //Čestitam! Stigao si do časovničara.\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}