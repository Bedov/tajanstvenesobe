{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/TrophiesManagment.ts"],"names":["_decorator","Component","Node","instantiate","Animation","GameManager","TaskManager","ccclass","property","TrophiesManagment","type","start","trophyNode","node","children","index","getInstance","getComponent","checkpoints","length","newTrophy","parent","calculateLocked","Progress","active","Number","calculateLockedWithEffect","checkpointForEffect","play"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,S,OAAAA,S;;AAChDC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;mCAIjBS,iB,WADZF,OAAO,CAAC,mBAAD,C,UAGHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER;AAAP,OAAD,C,oCAHb,MACaO,iBADb,SACuCR,SADvC,CACiD;AAAA;AAAA;;AAAA;AAAA;;AAK7CU,QAAAA,KAAK,GAAI;AACL,cAAIC,UAAU,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CAAjB;;AAEA,eAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG;AAAA;AAAA,0CAAYC,WAAZ,GAA0BV,WAA1B,CAAuCW,YAAvC;AAAA;AAAA,0CAAkEC,WAAlE,CAA8EC,MAA9E,GAAuF,CAAnH,EAAsHJ,KAAK,EAA3H,EAA+H;AAC3H,gBAAIK,SAAS,GAAGjB,WAAW,CAACS,UAAD,CAA3B;AACAQ,YAAAA,SAAS,CAACC,MAAV,GAAmB,KAAKR,IAAxB;AACH;;AAED,eAAKS,eAAL,GARK,CAUL;AACH;;AAEDA,QAAAA,eAAe,GAAG;AACd,eAAK,IAAIP,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG;AAAA;AAAA,0CAAYC,WAAZ,GAA0BO,QAAtD,EAAgER,KAAK,EAArE,EAAyE;AACrE,iBAAKF,IAAL,CAAUC,QAAV,CAAmBC,KAAnB,EAA0BD,QAA1B,CAAmC,CAAnC,EAAsCU,MAAtC,GAA+C,IAA/C;AACH;;AAED,eAAK,IAAIT,MAAK,GAAGU,MAAM,CAAC;AAAA;AAAA,0CAAYT,WAAZ,GAA0BO,QAA3B,CAAvB,EAA6DR,MAAK,GAAG,KAAKF,IAAL,CAAUC,QAAV,CAAmBK,MAAxF,EAAgGJ,MAAK,EAArG,EAAyG;AACrG,iBAAKF,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,EAA0BD,QAA1B,CAAmC,CAAnC,EAAsCU,MAAtC,GAA+C,KAA/C;AACH;AAED;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEK;;AAEDE,QAAAA,yBAAyB,GAAG;AACxB,cAAIC,mBAAmB,GAAIF,MAAM,CAAC;AAAA;AAAA,0CAAYT,WAAZ,GAA0BO,QAA3B,CAAN,GAA6C,CAAxE,CADwB,CAGxB;AAEA;;AAEA,eAAKV,IAAL,CAAUC,QAAV,CAAmBa,mBAAnB,EAAwCV,YAAxC,CAAqDb,SAArD,EAAiEwB,IAAjE;AACH;;AAhD4C,O;;;;;iBAGR,I;;;AAgDzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, instantiate, Vec3, Animation, ParticleSystem2D } from 'cc';\r\nimport { GameManager } from './GameManager';\r\nimport { TaskManager } from './Tasks/TaskManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n@ccclass('TrophiesManagment')\r\nexport class TrophiesManagment extends Component {\r\n    \r\n    @property({type: Node})\r\n    public particleEffect: Node | null = null;\r\n\r\n    start () {\r\n        var trophyNode = this.node.children[0];\r\n\r\n        for (let index = 0; index < GameManager.getInstance().TaskManager!.getComponent(TaskManager)!.checkpoints.length - 1; index++) {\r\n            var newTrophy = instantiate(trophyNode);\r\n            newTrophy.parent = this.node;\r\n        }\r\n\r\n        this.calculateLocked();\r\n\r\n        //GameManager.getInstance().TaskManager?.getComponent(TaskManager)?.checkpoints.length\r\n    }\r\n\r\n    calculateLocked() {\r\n        for (let index = 0; index < GameManager.getInstance().Progress; index++) {\r\n            this.node.children[index].children[0].active = true;\r\n        }\r\n\r\n        for (let index = Number(GameManager.getInstance().Progress); index < this.node.children.length; index++) {\r\n            this.node.children[index].children[0].active = false;\r\n        }\r\n\r\n        /*\r\n        if(GameManager.getInstance().Progress != 0)  {\r\n            var trophiePosition = this.node.children[Number(GameManager.getInstance().Progress)].worldPosition;\r\n            this.particleEffect?.setWorldPosition(new Vec3( trophiePosition)) ;\r\n            this.particleEffect!.getComponent(Animation)!.play();\r\n            this.particleEffect!.children[0].active = false;\r\n\r\n            this.particleEffect!.children[0].active = true;\r\n            this.particleEffect!.children[0].getComponent(ParticleSystem2D)!.enabled = true;\r\n        }\r\n        */\r\n    }\r\n\r\n    calculateLockedWithEffect() {\r\n        var checkpointForEffect =  Number(GameManager.getInstance().Progress) - 1;\r\n        \r\n        //this.calculateLocked();\r\n\r\n        //console.log(\"Sta sam to ulovio:  \" +  this.node.children[ Number(GameManager.getInstance().Progress)].getComponent(Animation));\r\n        \r\n        this.node.children[checkpointForEffect].getComponent(Animation)!.play();\r\n    }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}