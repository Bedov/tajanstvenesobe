{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/Tasks/TaskManager.ts"],"names":["_decorator","Component","Node","Vec3","Quat","Animation","Prefab","instantiate","Checkpoint","FollowGoForward","GameManager","GlobalManager","TrophiesManagment","ButtonDisabler","Task","ccclass","property","TaskManager","type","onLoad","checkpoints","node","children","giveOrderNumberToTasks","start","checkDoneTasks","tasks","getTasks","index","length","getComponent","orderNumber","forEach","checkpoint","element","undefined","push","element2","refreshCheckpoint","newProgress","indexOf","console","log","getInstance","activeLevelData","sceneName","levelProgress","Number","Progress","trophies","calculateLockedWithEffect","checkReadinesForTasks","checkReadienes","task","executed","checkActivityOfHelpButton","getDirection","Canvas","getChildByName","lockedByOutside","arrow","play","Player","getDirectionFollow","itemPosition","QuestionItem","worldPosition","node1","followPrefab","setTarget","parent","position","lookAt","Vec3EulerRot","toEuler","rotation","toString","readAgain","taskInCheckpoint","Question","uvodniTask","helpButton","active"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAkBC,MAAAA,W,OAAAA,W;;AAClFC,MAAAA,U,iBAAAA,U;;AAeAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,iB,iBAAAA,iB;;AACAC,MAAAA,c,iBAAAA,c;;AAEAC,MAAAA,I,iBAAAA,I;;;;;;;OApBH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBhB,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;6BAaaiB,W,WADZF,OAAO,CAAC,aAAD,C,UAGHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,UAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,UAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,UAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,UAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,UAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,UAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,UAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,WAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,WAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,WAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEhB;AAAP,OAAD,C,WAGRc,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEZ;AAAP,OAAD,C,oCApCb,MACaW,WADb,SACiChB,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,+CAsCjB,EAtCiB;AAAA;;AAwCvCkB,QAAAA,MAAM,GAAI;AACN,eAAKC,WAAL,GAAmB,KAAKC,IAAL,CAAUC,QAA7B;AACA,eAAKC,sBAAL;AACH;;AAEDC,QAAAA,KAAK,GAAG;AACJ,eAAKC,cAAL;AACH;;AAEDF,QAAAA,sBAAsB,GAAG;AACrB,cAAIG,KAAK,GAAG,KAAKC,QAAL,EAAZ;;AACD,eAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,KAAK,CAACG,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AAC/CF,YAAAA,KAAK,CAACE,KAAD,CAAL,CAAaE,YAAb;AAAA;AAAA,8BAAiCC,WAAjC,GAA+CH,KAA/C;AAEH;AACH;;AAEDD,QAAAA,QAAQ,GAAG;AAEP,cAAID,KAAa,GAAG,EAApB;AAEA,eAAKN,WAAL,CAAiBY,OAAjB,CAAyBC,UAAU,IAAI;AACnCA,YAAAA,UAAU,CAACX,QAAX,CAAoBU,OAApB,CAA4BE,OAAO,IAAI;AACnC,kBAAGA,OAAO,CAACJ,YAAR;AAAA;AAAA,mCAA8BK,SAAjC,EACIT,KAAK,CAACU,IAAN,CAAWF,OAAX;AAEJA,cAAAA,OAAO,CAACZ,QAAR,CAAiBU,OAAjB,CAAyBK,QAAQ,IAAI;AACjC,oBAAGH,OAAO,CAACJ,YAAR;AAAA;AAAA,qCAA8BK,SAAjC,EACIT,KAAK,CAACU,IAAN,CAAWC,QAAX;AACP,eAHD;AAIH,aARD;AASH,WAVD;AAYA,iBAAOX,KAAP;AACH;;AAEDY,QAAAA,iBAAiB,CAACL,UAAD,EAAmB;AAAA;;AAChC,cAAIM,WAAW,GAAG,KAAKnB,WAAL,CAAiBoB,OAAjB,CAAyBP,UAAzB,IAAuC,CAAzD;AAEAQ,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAsB;AAAA;AAAA,8CAAcC,WAAd,GAA4BC,eAA5B,CAA4CC,SAA9E;AACA;AAAA;AAAA,8CAAcF,WAAd,GAA4BC,eAA5B,CAA6CE,aAA7C,GAA6DC,MAAM,CAAER,WAAF,CAAnE;AAEA,cAAGA,WAAW,IAAIJ,SAAlB,EACI,IAAGI,WAAW,GAAG;AAAA;AAAA,0CAAYI,WAAZ,GAA0BK,QAA3C,EACI;AAAA;AAAA,0CAAYL,WAAZ,GAA0BK,QAA1B,GAAqCT,WAArC;AAER,cAAG;AAAA;AAAA,0CAAYI,WAAZ,GAA0BM,QAA1B,IAAsCd,SAAzC,EACI;AAAA;AAAA,0CAAYQ,WAAZ,GAA0BM,QAA1B,0GAAoCnB,YAApC;AAAA;AAAA,uIAAqEoB,yBAArE;AAGP;;AAEDC,QAAAA,qBAAqB,GAAG;AACpB,cAAI7B,QAAQ,GAAG,KAAKK,QAAL,EAAf;AAEAL,UAAAA,QAAQ,CAACU,OAAT,CAAiBE,OAAO,IAAI;AAAA;;AACxB,gBAAGA,OAAO,CAACJ,YAAR;AAAA;AAAA,6BAAH,EACA,yBAAAI,OAAO,CAACJ,YAAR;AAAA;AAAA,6GAA4BsB,cAA5B;AACH,WAHD;AAIH;;AAED3B,QAAAA,cAAc,GAAG;AACb,cAAIH,QAAQ,GAAG,KAAKK,QAAL,EAAf;AAEA,cAAG;AAAA;AAAA,0CAAYgB,WAAZ,GAA0BK,QAA1B,IAAsC,CAAzC,EACI;;AAEJ,eAAK,IAAIpB,KAAK,GAAGmB,MAAM,CAAC;AAAA;AAAA,0CAAYJ,WAAZ,GAA0BK,QAA3B,CAAN,GAA4C,CAA7D,EAAiEpB,KAAK,IAAI,CAA1E,EAA6EA,KAAK,EAAlF,EAAsF;AAClFa,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAYd,KAAxB;AAEA,gBAAMK,UAAU,GAAG,KAAKb,WAAL,CAAiBQ,KAAjB,CAAnB;AACAK,YAAAA,UAAU,CAACX,QAAX,CAAoBU,OAApB,CAA4BqB,IAAI,IAAI;AAChCA,cAAAA,IAAI,CAACvB,YAAL;AAAA;AAAA,gCAAyBwB,QAAzB,GAAoC,IAApC;AAEH,aAHD;AAKH;;AAED,eAAKH,qBAAL;AAEA,eAAKI,yBAAL;AACA;AACR;AACA;AACA;AACA;AAKK;;AACDC,QAAAA,YAAY,GAAG;AAAA;;AAEX;AAAA;AAAA,0CAAYb,WAAZ,GAA0Bc,MAA1B,CAAkCC,cAAlC,CAAiD,UAAjD,EAA8DA,cAA9D,CAA6E,gBAA7E,EAAgG5B,YAAhG;AAAA;AAAA,gDAA8H6B,eAA9H,GAAgJ,IAAhJ;AAEA,cAAG,KAAKC,KAAL,IAAc,IAAjB,EACI,sBAAKA,KAAL,CAAY9B,YAAZ,CAAyBzB,SAAzB,iEAAqCwD,IAArC,CAA0C,SAA1C,EADJ,KAGI;AAAA;AAAA,0CAAYlB,WAAZ,GAA0BmB,MAA1B,CAAkCJ,cAAlC,CAAiD,OAAjD,EAA2D5B,YAA3D,CAAwEzB,SAAxE,mEAAoFwD,IAApF,CAAyF,SAAzF;AAEP;;AAEDE,QAAAA,kBAAkB,GAAG;AACjB,cAAIC,YAAkB,GAAG,IAAI7D,IAAJ,CAAU,KAAKiB,WAAL,CAAkB2B,MAAM,CAAC;AAAA;AAAA,0CAAYJ,WAAZ,GAA0BK,QAA3B,CAAxB,EAA8DlB,YAA9D;AAAA;AAAA,wCAAwFmC,YAAxF,CAAsGC,aAAhH,CAAzB;AAGA,cAAMC,KAAK,GAAG5D,WAAW,CAAC,KAAK6D,YAAN,CAAzB;AACAD,UAAAA,KAAK,CAAErC,YAAP;AAAA;AAAA,kDAAsCuC,SAAtC,CAAiD,KAAKjD,WAAL,CAAkB2B,MAAM,CAAC;AAAA;AAAA,0CAAYJ,WAAZ,GAA0BK,QAA3B,CAAxB,EAA8DlB,YAA9D;AAAA;AAAA,wCAAwFmC,YAAzI,EALiB,CAMjB;;AAEAE,UAAAA,KAAK,CAAEG,MAAP,GAAgB,KAAKjD,IAArB;AACA8C,UAAAA,KAAK,CAAEI,QAAP,GAAkB,IAAIpE,IAAJ,CAAU;AAAA;AAAA,0CAAYwC,WAAZ,GAA0BmB,MAA1B,CAAkCJ,cAAlC,CAAiD,OAAjD,EAA2DQ,aAArE,CAAlB;AAEAC,UAAAA,KAAK,CAAEK,MAAP,CAAeR,YAAf;AAEA,cAAIS,YAAkB,GAAG,IAAItE,IAAJ,EAAzB;AACAC,UAAAA,IAAI,CAACsE,OAAL,CAAaD,YAAb,EAA2BN,KAAK,CAAEQ,QAAlC;AAEAlC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAc+B,YAAY,CAACG,QAAb,EAA1B;AAEH;;AAEDC,QAAAA,SAAS,GAAG;AACR,eAAKzD,WAAL,CAAkB2B,MAAM,CAAC;AAAA;AAAA,0CAAYJ,WAAZ,GAA0BK,QAA3B,CAAxB,EAA8D1B,QAA9D,CAAuEU,OAAvE,CAA+E8C,gBAAgB,IAAI;AAAA;;AAC/F,gBAAI,+BAAK1D,WAAL,CAAkB2B,MAAM,CAAC;AAAA;AAAA,4CAAYJ,WAAZ,GAA0BK,QAA3B,CAAxB,EAA8DlB,YAA9D;AAAA;AAAA,yHAAwFiD,QAAxF,KAAoGD,gBAAxG,EAA2H;AACvH,kBAAGA,gBAAgB,CAAChD,YAAjB;AAAA;AAAA,gCAAqCkD,UAArC,IAAmD,KAAtD,EAA6D;AACzDF,gBAAAA,gBAAgB,CAAChD,YAAjB;AAAA;AAAA,kCAAqCwB,QAArC,GAAgD,KAAhD,CADyD,CAEzD;AACH;AAEJ;AACJ,WARD;AASA,eAAKH,qBAAL;AACH;;AAEDI,QAAAA,yBAAyB,GAAG;AAAA;;AACxB,cAAG,gCAAKnC,WAAL,CAAkB2B,MAAM,CAAC;AAAA;AAAA,0CAAYJ,WAAZ,GAA0BK,QAA3B,CAAxB,EAA8DlB,YAA9D;AAAA;AAAA,yHAAwFmC,YAAxF,KAAwG9B,SAA3G,EACI,KAAK8C,UAAL,CAAiBC,MAAjB,GAA0B,KAA1B,CADJ,KAGI,KAAKD,UAAL,CAAiBC,MAAjB,GAA0B,IAA1B;AACP;;AApLsC,O;;;;;iBAGP,I;;;;;;;iBAGK,I;;;;;;;iBAGF,I;;;;;;;iBAGE,I;;;;;;;iBAGR,I;;;;;;;iBAGK,I;;;;;;;iBAGH,I;;;;;;;iBAGE,I;;;;;;;iBAGL,I;;;;;;;iBAGO,I;;;;;;;iBAGN,I;;;;;;;iBAGM,I;;;AAsJvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, Game, Vec3, Quat, quat, Animation, Prefab, director, instantiate} from 'cc';\r\nimport { Checkpoint } from '../Checkpoint/Checkpoint';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = TaskManager\r\n * DateTime = Thu Nov 18 2021 00:16:36 GMT+0100 (Central European Standard Time)\r\n * Author = stickandrope\r\n * FileBasename = TaskManager.ts\r\n * FileBasenameNoExtension = TaskManager\r\n * URL = db://assets/Scripts/TaskManager.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n import { DetectTypeOfDevice } from \"../DetectTypeOfDevice\";\r\nimport { FollowGoForward } from '../FollowGoForward';\r\nimport { GameManager } from '../GameManager';\r\nimport { GlobalManager, levelObject } from '../GlobalManager';\r\nimport { TrophiesManagment } from '../TrophiesManagment';\r\nimport { ButtonDisabler } from '../Utilities/ButtonDisabler';\r\nimport { GenericUI } from '../Utilities/GenericUI';\r\nimport { Task } from './Task';\r\nimport { TaskABCquestion } from './TaskABCquestion';\r\n \r\n \r\n@ccclass('TaskManager')\r\nexport class TaskManager extends Component {\r\n\r\n    @property({type: Node})\r\n    public genericUI: Node | null = null;\r\n\r\n    @property({type: Node})\r\n    public genericUIimage: Node | null = null;\r\n\r\n    @property({type: Node})\r\n    public genericUIABC: Node | null = null;\r\n\r\n    @property({type: Node})\r\n    public genericUIinput: Node | null = null;\r\n\r\n    @property({type: Node})\r\n    public canvas: Node | null = null;\r\n\r\n    @property({type: Node})\r\n    public gameManager: Node | null = null;\r\n\r\n    @property({type: Node})\r\n    public subtitle: Node | null = null;\r\n\r\n    @property({type: Node})\r\n    public helpButton: Node | null = null;\r\n\r\n    @property({type: Node})\r\n    public arrow: Node | null = null;\r\n\r\n    @property({type: Node})\r\n    public loadingPanel: Node | null = null;\r\n\r\n    @property({type: Node})\r\n    public follow: Node | null = null;\r\n\r\n    @property({type: Prefab})\r\n    public followPrefab: Node | null = null;\r\n\r\n    checkpoints: Node[] = [];\r\n\r\n    onLoad () {\r\n        this.checkpoints = this.node.children; \r\n        this.giveOrderNumberToTasks();\r\n    }\r\n\r\n    start() {\r\n        this.checkDoneTasks();\r\n    }\r\n\r\n    giveOrderNumberToTasks() {\r\n        var tasks = this.getTasks();\r\n       for (let index = 0; index < tasks.length; index++) {\r\n           tasks[index].getComponent(Task)!.orderNumber = index;\r\n           \r\n       }\r\n    }\r\n\r\n    getTasks() {\r\n\r\n        var tasks: Node[] = [];\r\n\r\n        this.checkpoints.forEach(checkpoint => {\r\n            checkpoint.children.forEach(element => {\r\n                if(element.getComponent(Task) != undefined)\r\n                    tasks.push(element);\r\n\r\n                element.children.forEach(element2 => {\r\n                    if(element.getComponent(Task) != undefined)\r\n                        tasks.push(element2);\r\n                });\r\n            });\r\n        });\r\n\r\n        return tasks;\r\n    }\r\n\r\n    refreshCheckpoint(checkpoint: Node) {\r\n        var newProgress = this.checkpoints.indexOf(checkpoint) + 1;\r\n\r\n        console.log(\"Level Data WAKA \" +  GlobalManager.getInstance().activeLevelData.sceneName );\r\n        GlobalManager.getInstance().activeLevelData!.levelProgress = Number( newProgress );\r\n\r\n        if(newProgress != undefined)\r\n            if(newProgress > GameManager.getInstance().Progress)\r\n                GameManager.getInstance().Progress = newProgress;\r\n\r\n        if(GameManager.getInstance().trophies != undefined)\r\n            GameManager.getInstance().trophies?.getComponent(TrophiesManagment)?.calculateLockedWithEffect();\r\n\r\n       \r\n    }\r\n\r\n    checkReadinesForTasks() {\r\n        var children = this.getTasks();\r\n\r\n        children.forEach(element => {\r\n            if(element.getComponent(Task) )\r\n            element.getComponent(Task)?.checkReadienes();\r\n        });\r\n    }\r\n\r\n    checkDoneTasks() {\r\n        var children = this.getTasks();\r\n\r\n        if(GameManager.getInstance().Progress == 0)\r\n            return;\r\n\r\n        for (let index = Number(GameManager.getInstance().Progress) -1 ; index >= 0; index--) {\r\n            console.log(\"PETLJA \" + index);\r\n            \r\n            const checkpoint = this.checkpoints[index];\r\n            checkpoint.children.forEach(task => {\r\n                task.getComponent(Task)!.executed = true;\r\n \r\n            });\r\n            \r\n        }\r\n\r\n        this.checkReadinesForTasks();\r\n\r\n        this.checkActivityOfHelpButton();\r\n        /*\r\n        children.forEach(task => {\r\n\r\n            if( GameManager.getInstance().Progress > task.getComponent(Task)!.checkPointBelong)\r\n            task.getComponent(Task)!.executed = true;\r\n\r\n        }); */\r\n\r\n\r\n    }\r\n    getDirection() {\r\n        \r\n        GameManager.getInstance().Canvas!.getChildByName(\"BottomUI\")!.getChildByName(\"HelpNavigation\")!.getComponent(ButtonDisabler)!.lockedByOutside = true;\r\n        \r\n        if(this.arrow != null)\r\n            this.arrow!.getComponent(Animation)?.play(\"ScaleIn\");\r\n        else\r\n            GameManager.getInstance().Player!.getChildByName(\"Arrow\")!.getComponent(Animation)?.play(\"ScaleIn\");\r\n\r\n    }\r\n\r\n    getDirectionFollow() {\r\n        var itemPosition: Vec3 = new Vec3( this.checkpoints[ Number(GameManager.getInstance().Progress)].getComponent(Checkpoint)!.QuestionItem!.worldPosition ) ;\r\n    \r\n\r\n        const node1 = instantiate(this.followPrefab);\r\n        node1!.getComponent(FollowGoForward)!.setTarget( this.checkpoints[ Number(GameManager.getInstance().Progress)].getComponent(Checkpoint)!.QuestionItem!);\r\n        //let node1: Node= instantiate(this.followPrefab);  //instantiate(this.follow);\r\n\r\n        node1!.parent = this.node;\r\n        node1!.position = new Vec3( GameManager.getInstance().Player!.getChildByName(\"Arrow\")!.worldPosition );\r\n        \r\n        node1!.lookAt( itemPosition);\r\n\r\n        var Vec3EulerRot: Vec3 = new Vec3;\r\n        Quat.toEuler(Vec3EulerRot, node1!.rotation );\r\n\r\n        console.log(\"Rotation \" + Vec3EulerRot.toString() );\r\n        \r\n    }\r\n\r\n    readAgain() {\r\n        this.checkpoints[ Number(GameManager.getInstance().Progress)].children.forEach(taskInCheckpoint => {\r\n            if( this.checkpoints[ Number(GameManager.getInstance().Progress)].getComponent(Checkpoint)?.Question != taskInCheckpoint ) {\r\n                if(taskInCheckpoint.getComponent(Task)!.uvodniTask == false) {\r\n                    taskInCheckpoint.getComponent(Task)!.executed = false;\r\n                    //taskInCheckpoint.getComponent(Task)?.startScheduling();\r\n                }\r\n                \r\n            }\r\n        });\r\n        this.checkReadinesForTasks();\r\n    }\r\n\r\n    checkActivityOfHelpButton() {\r\n        if(this.checkpoints[ Number(GameManager.getInstance().Progress)].getComponent(Checkpoint)?.QuestionItem != undefined)\r\n            this.helpButton!.active = false;\r\n        else\r\n            this.helpButton!.active = true;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}