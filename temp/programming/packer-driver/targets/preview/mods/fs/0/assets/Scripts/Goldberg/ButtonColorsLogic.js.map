{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/Goldberg/ButtonColorsLogic.ts"],"names":["_decorator","Component","Material","MeshRenderer","LevelButtonClicked","ccclass","property","ButtonColorsLogic","start","buttonsArray","push","node","getChildByName","refreshColors","progress","index","length","element","getComponent","setMaterial","lockedMaterial","lockedButton","finishedMaterial","Number","unlockedMaterial","lockAllButtons","forEach"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAuBC,MAAAA,Q,OAAAA,Q;AAAgBC,MAAAA,Y,OAAAA,Y;;AACnDC,MAAAA,kB,iBAAAA,kB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;mCAGjBO,iB,WADZF,OAAO,CAAC,mBAAD,C,UAGHC,QAAQ,CAACJ,QAAD,C,UAGRI,QAAQ,CAACJ,QAAD,C,UAGRI,QAAQ,CAACJ,QAAD,C,oCATb,MACaK,iBADb,SACuCN,SADvC,CACiD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,gDAiBhB,EAjBgB;AAAA;;AAmB7CO,QAAAA,KAAK,GAAI;AACL,eAAKC,YAAL,CAAmBC,IAAnB,CAAwB,KAAKC,IAAL,CAAUC,cAAV,CAAyB,GAAzB,CAAxB;AACA,eAAKH,YAAL,CAAmBC,IAAnB,CAAwB,KAAKC,IAAL,CAAUC,cAAV,CAAyB,GAAzB,CAAxB;AACA,eAAKH,YAAL,CAAmBC,IAAnB,CAAwB,KAAKC,IAAL,CAAUC,cAAV,CAAyB,GAAzB,CAAxB;AACA,eAAKH,YAAL,CAAmBC,IAAnB,CAAwB,KAAKC,IAAL,CAAUC,cAAV,CAAyB,GAAzB,CAAxB;AACA,eAAKH,YAAL,CAAmBC,IAAnB,CAAwB,KAAKC,IAAL,CAAUC,cAAV,CAAyB,GAAzB,CAAxB;AAEA,eAAKC,aAAL,CAAmB,CAAnB;AACH;;AAEDA,QAAAA,aAAa,CAACC,QAAD,EAAmB;AAC5B,eAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKN,YAAL,CAAkBO,MAA9C,EAAsDD,KAAK,EAA3D,EAA+D;AAC3D,gBAAME,OAAO,GAAG,KAAKR,YAAL,CAAkBM,KAAlB,EAAyBG,YAAzB,CAAsCf,YAAtC,EAAqDgB,WAArD,CAAiE,KAAKC,cAAtE,EAAuF,CAAvF,CAAhB;AACH;;AAED,eAAK,IAAIL,MAAK,GAAG,CAAjB,EAAoBA,MAAK,GAAGD,QAA5B,EAAsCC,MAAK,EAA3C,EAA+C;AAC3C,iBAAKN,YAAL,CAAkBM,MAAlB,EAAyBG,YAAzB;AAAA;AAAA,0DAA2DG,YAA3D,GAA0E,KAA1E;;AACA,gBAAMJ,QAAO,GAAG,KAAKR,YAAL,CAAkBM,MAAlB,EAAyBG,YAAzB,CAAsCf,YAAtC,EAAqDgB,WAArD,CAAiE,KAAKG,gBAAtE,EAAyF,CAAzF,CAAhB;AACH;;AAED,eAAKb,YAAL,CAAkBc,MAAM,CAACT,QAAD,CAAxB,EAAoCI,YAApC;AAAA;AAAA,wDAAsEG,YAAtE,GAAqF,KAArF;AACA,eAAKZ,YAAL,CAAkBc,MAAM,CAACT,QAAD,CAAxB,EAAoCI,YAApC,CAAiDf,YAAjD,EAAgEgB,WAAhE,CAA4E,KAAKK,gBAAjF,EAAoG,CAApG;AACH;;AAEDC,QAAAA,cAAc,GAAG;AACb,eAAKhB,YAAL,CAAkBiB,OAAlB,CAA0BT,OAAO,IAAI;AACjCA,YAAAA,OAAO,CAACC,YAAR;AAAA;AAAA,0DAA0CG,YAA1C,GAAyD,IAAzD;AACH,WAFD;AAGH,SA/C4C,CAiD7C;AACA;AACA;;;AAnD6C,O;;;;;;;;;;;;;;;;AAsDjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { _decorator, Component, Node, find, Material, Mesh, MeshRenderer } from 'cc';\nimport { LevelButtonClicked } from '../UI/LevelButtoClicked';\nconst { ccclass, property } = _decorator;\n \n@ccclass('ButtonColorsLogic')\nexport class ButtonColorsLogic extends Component {\n\n    @property(Material)\n    lockedMaterial?: Material ;\n\n    @property(Material)\n    unlockedMaterial?: Material ;\n\n    @property(Material)\n    finishedMaterial?: Material ;\n\n    button1? : Node; \n    button2? : Node; \n    button3? : Node; \n    button4? : Node; \n    button5? : Node; \n\n    buttonsArray : Array<Node> = [];\n\n    start () {\n        this.buttonsArray!.push(this.node.getChildByName(\"1\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"2\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"3\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"4\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"5\")!);\n\n        this.refreshColors(3);\n    }\n\n    refreshColors(progress: Number) {\n        for (let index = 0; index < this.buttonsArray.length; index++) {\n            const element = this.buttonsArray[index].getComponent(MeshRenderer)!.setMaterial(this.lockedMaterial!, 0);\n        }\n\n        for (let index = 0; index < progress; index++) {\n            this.buttonsArray[index].getComponent(LevelButtonClicked)!.lockedButton = false;\n            const element = this.buttonsArray[index].getComponent(MeshRenderer)!.setMaterial(this.finishedMaterial!, 0);\n        }\n\n        this.buttonsArray[Number(progress)].getComponent(LevelButtonClicked)!.lockedButton = false;\n        this.buttonsArray[Number(progress)].getComponent(MeshRenderer)!.setMaterial(this.unlockedMaterial!, 0);\n    }\n\n    lockAllButtons() {\n        this.buttonsArray.forEach(element => {\n            element.getComponent(LevelButtonClicked)!.lockedButton = true;\n        });\n    }\n\n    // update (deltaTime: number) {\n    //     // [4]\n    // }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}