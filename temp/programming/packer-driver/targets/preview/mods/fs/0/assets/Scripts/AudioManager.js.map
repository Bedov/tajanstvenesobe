{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/AudioManager.ts"],"names":["_decorator","Component","AudioClip","AudioSource","ccclass","property","AudioManager","getInstance","instance","onLoad","audioSource","node","getComponent","start","positiveSoundPlay","playOneShot","positiveSound","winSoundPlay","winSound","negativeSoundPlay","negativeSound","clickSoundPlay","clickSound"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;;;;;;;OAC3C;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;8BAGaM,Y,WADZF,OAAO,CAAC,cAAD,C,UAEHC,QAAQ,CAACH,SAAD,C,UAGRG,QAAQ,CAACH,SAAD,C,UAGRG,QAAQ,CAACH,SAAD,C,UAGRG,QAAQ,CAACH,SAAD,C,8CAXb,MACaI,YADb,SACkCL,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,+CAaL,IAbK;AAAA;;AAef,eAAXM,WAAW,GAAiB;AACtC,cAAI,CAAC,KAAKC,QAAV,EAAoB;AAChBF,YAAAA,YAAY,CAACE,QAAb,GAAwB,IAAIF,YAAJ,EAAxB;AAEH;;AACD,iBAAOA,YAAY,CAACE,QAApB;AACH;;AAIDC,QAAAA,MAAM,GAAG;AACLH,UAAAA,YAAY,CAACE,QAAb,GAAwB,IAAxB;AACA,eAAKE,WAAL,GAAmB,KAAKC,IAAL,CAAUC,YAAV,CAAuBT,WAAvB,CAAnB;AACH;;AAEDU,QAAAA,KAAK,GAAI,CACL;AACH;;AAEDC,QAAAA,iBAAiB,GAAG;AAChB,eAAKJ,WAAL,CAAiBK,WAAjB,CAA6B,KAAKC,aAAlC;AACH;;AAEDC,QAAAA,YAAY,GAAG;AACX,eAAKP,WAAL,CAAiBK,WAAjB,CAA6B,KAAKG,QAAlC;AACH;;AAEDC,QAAAA,iBAAiB,GAAG;AAChB,eAAKT,WAAL,CAAiBK,WAAjB,CAA6B,KAAKK,aAAlC;AACH;;AAEDC,QAAAA,cAAc,GAAG;AACb,eAAKX,WAAL,CAAiBK,WAAjB,CAA6B,KAAKO,UAAlC;AACH;;AAhDuC,O;;;;;;;;;;;;;;;;;;;;;AAoD5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { _decorator, Component, Node, AudioClip, AudioSource } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = AudioManager\n * DateTime = Thu Apr 28 2022 16:20:08 GMT+0200 (Central European Summer Time)\n * Author = stickandrope\n * FileBasename = AudioManager.ts\n * FileBasenameNoExtension = AudioManager\n * URL = db://assets/Scripts/AudioManager.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\n *\n */\n \n@ccclass('AudioManager')\nexport class AudioManager extends Component {\n    @property(AudioClip)\n    winSound?: AudioClip;\n\n    @property(AudioClip)\n    positiveSound?: AudioClip;\n\n    @property(AudioClip)\n    negativeSound?: AudioClip;\n\n    @property(AudioClip)\n    clickSound?: AudioClip;\n    \n    private audioSource: AudioSource = null!;\n\n    public static getInstance(): AudioManager {\n        if (!this.instance) {\n            AudioManager.instance = new AudioManager();\n            \n        }\n        return AudioManager.instance;\n    }\n\n    static instance: AudioManager;\n\n    onLoad() {\n        AudioManager.instance = this;\n        this.audioSource = this.node.getComponent(AudioSource)!;\n    }\n\n    start () {\n        // [3]\n    }\n\n    positiveSoundPlay() {\n        this.audioSource.playOneShot(this.positiveSound!);\n    }\n\n    winSoundPlay() {\n        this.audioSource.playOneShot(this.winSound!);\n    }\n\n    negativeSoundPlay() {\n        this.audioSource.playOneShot(this.negativeSound!);\n    }\n\n    clickSoundPlay() {\n        this.audioSource.playOneShot(this.clickSound!);\n    }\n\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}