{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/Tasks/TaskEnding.ts"],"names":["_decorator","director","macro","Task","elevator","GlobalManager","levelObject","levelStatus","ccclass","property","TaskEnding","Boolean","start","schedule","checkExecution","REPEAT_FOREVER","update","isItOkToExecute","showTask","unschedule","getInstance","activeLevelData","setLevelProgress","indexOfCurrentScene","levelsArray","indexOf","status","unlocked","finished","length","loadScene","projectNumber","toString","executed","findSceneDataByName","sceneName","returnLevel","forEach","element"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, director, Collider, game, Canvas, macro, Sprite, Enum } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nimport { TaskManager } from \"./TaskManager\";\r\nimport { ScriptEffects } from \"../Utilities/ScriptEffects\";\r\nimport { GenericUI } from \"../Utilities/GenericUI\";\r\nimport { DetectTypeOfDevice } from \"../DetectTypeOfDevice\";\r\nimport { Task } from './Task';\r\nimport { GameManager } from '../GameManager';\r\nimport { JSONimage, JSONquestTekst } from '../RemoteScripts/JSONloader';\r\nimport { elevator, GlobalManager, levelObject, levelStatus } from '../GlobalManager';\r\n\r\n\r\n\r\n@ccclass('TaskEnding')\r\nexport class TaskEnding extends Task {\r\n\r\n    myTimeHasCome = true;\r\n\r\n\r\n    @property (Boolean)\r\n    debugEnding = false;\r\n\r\n    start(){\r\n        this.schedule(this.checkExecution, 0.1, macro.REPEAT_FOREVER);\r\n        \r\n        //this.scheduleOnce(this.fetchTheData, this.orderNumber * 0.05);\r\n        \r\n    }\r\n\r\n\r\n\r\n    update() {\r\n\r\n    }\r\n\r\n    checkExecution() {\r\n        if(this.isItOkToExecute()) {\r\n            this.showTask();\r\n            this.unschedule(this.checkExecution);\r\n        }\r\n            \r\n    }\r\n\r\n\r\n    showTask() {\r\n        GlobalManager.getInstance().activeLevelData.setLevelProgress(0);\r\n        var indexOfCurrentScene = GlobalManager.getInstance().levelsArray.indexOf(GlobalManager.getInstance().activeLevelData);\r\n\r\n\r\n        if(GlobalManager.getInstance().activeLevelData.status == levelStatus.unlocked ) \r\n            GlobalManager.getInstance().activeLevelData.status = levelStatus.finished;\r\n\r\n            // console.log(\"Task ending active level: \" + GlobalManager.getInstance().activeLevelData.sceneName);\r\n            // console.log(\"indexOfCurrentScene \" + indexOfCurrentScene);\r\n            // console.log(\"GlobalManager.getInstance().levelsArray.length: \" + GlobalManager.getInstance().levelsArray.length);\r\n\r\n        if(indexOfCurrentScene < GlobalManager.getInstance().levelsArray.length -1) {\r\n            GlobalManager.getInstance().levelsArray[indexOfCurrentScene + 1].status = levelStatus.unlocked;\r\n            GlobalManager.getInstance().activeLevelData =  elevator; //  \r\n            GlobalManager.getInstance().activeLevelData.setLevelProgress(1); \r\n        } else {\r\n            GlobalManager.getInstance().activeLevelData =  elevator; //  \r\n            GlobalManager.getInstance().activeLevelData.setLevelProgress(3); \r\n        }\r\n        \r\n\r\n        director.loadScene(\"MainMenuLift\"+ GlobalManager.getInstance().projectNumber.toString());\r\n\r\n        this.executed = true;\r\n    }\r\n\r\n    findSceneDataByName(sceneName: string) {\r\n        var levelsArray = GlobalManager.getInstance().levelsArray;\r\n        \r\n        var returnLevel = new levelObject;\r\n        \r\n        levelsArray.forEach(element => {\r\n            if(element.sceneName == sceneName) \r\n              returnLevel = element;\r\n        });\r\n  \r\n        return returnLevel;\r\n      }\r\n\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}