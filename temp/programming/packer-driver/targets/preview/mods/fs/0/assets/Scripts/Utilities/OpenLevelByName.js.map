{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/Utilities/OpenLevelByName.ts"],"names":["_decorator","Component","Node","director","Label","GlobalManager","levelObject","ScriptEffects","ccclass","property","OpenLevelByName","start","labelTemp","loadingPercentLable","findSceneDataByName","sceneName","levelsArray","getInstance","returnLevel","forEach","element","loadAndPlaySceneByName","event","customEventData","loadingPanel","getComponent","fadeInActive","activeLevelData","console","log","preloadScene","completedCount","totalCount","item","percent","string","Math","round","loadScene","loadAndPlaySceneByNameD"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, director, loader, Label, assetManager, AssetManager, Scene, Game } from 'cc';\r\nimport { GameManager } from '../GameManager';\r\nimport { GlobalManager, levelObject } from '../GlobalManager';\r\nimport { ScriptEffects } from './ScriptEffects';\r\nconst { ccclass, property } = _decorator;\r\n\r\nvar labelTemp :Label ;\r\n/**\r\n * Predefined variables\r\n * Name = OpenLevelByName\r\n * DateTime = Sun Dec 19 2021 13:54:02 GMT+0100 (Central European Standard Time)\r\n * Author = stickandrope\r\n * FileBasename = OpenLevelByName.ts\r\n * FileBasenameNoExtension = OpenLevelByName\r\n * URL = db://assets/Scripts/Utilities/OpenLevelByName.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n \r\n@ccclass('OpenLevelByName')\r\nexport class OpenLevelByName extends Component {\r\n    \r\n    @property(Node)\r\n    loadingPanel!: Node;\r\n\r\n    @property(Label)\r\n    loadingPercentLable!: Label;\r\n\r\n    start () {\r\n        labelTemp = this.loadingPercentLable;\r\n    }\r\n\r\n    findSceneDataByName(sceneName: string) {\r\n      var levelsArray = GlobalManager.getInstance().levelsArray;\r\n      \r\n      var returnLevel = new levelObject;\r\n      \r\n      levelsArray.forEach(element => {\r\n          if(element.sceneName == sceneName) \r\n            returnLevel = element;\r\n      });\r\n\r\n      return returnLevel;\r\n    }\r\n\r\n    loadAndPlaySceneByName(event : Event, customEventData: string) {\r\n        this.loadingPanel.getComponent(ScriptEffects)?.fadeInActive();\r\n          \r\n      \r\n        \r\n        GlobalManager.getInstance().activeLevelData = this.findSceneDataByName(customEventData);\r\n\r\n        console.log(\"ActiveLevel \" + GlobalManager.getInstance().activeLevelData.sceneName );\r\n\r\n        director.preloadScene(customEventData, function  (completedCount, totalCount, item) {\r\n            if (labelTemp) {\r\n              var percent = 0;\r\n              if (totalCount > 0) {\r\n                percent = 100 * completedCount / totalCount;\r\n              }\r\n              labelTemp.string = Math.round(percent) + '%';\r\n            }  \r\n\r\n        },function() {  director.loadScene(customEventData) } ) ;\r\n\r\n       // director.loadScene(sceneName);\r\n    }\r\n\r\n    loadAndPlaySceneByNameD(customEventData: string) {\r\n      this.loadingPanel.getComponent(ScriptEffects)?.fadeInActive();\r\n      \r\n      GlobalManager.getInstance().activeLevelData = this.findSceneDataByName(customEventData);\r\n\r\n      director.preloadScene(customEventData, function  (completedCount, totalCount, item) {\r\n          if (labelTemp) {\r\n            var percent = 0;\r\n            if (totalCount > 0) {\r\n              percent = 100 * completedCount / totalCount;\r\n            }\r\n            labelTemp.string = Math.round(percent) + '%';\r\n          }  \r\n\r\n      },function() {  director.loadScene(customEventData) } ) ;\r\n\r\n     // director.loadScene(sceneName);\r\n  }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}