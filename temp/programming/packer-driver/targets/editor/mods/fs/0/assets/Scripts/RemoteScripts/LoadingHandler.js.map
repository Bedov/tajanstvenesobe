{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/RemoteScripts/LoadingHandler.ts"],"names":["_decorator","Component","Node","GameManager","GameStatuType","ScriptEffects","ccclass","property","LoadingHandler","type","turnOnLoading","loadingPanel","getComponent","fadeInActive","getInstance","gameStatus","gameTutorial","gamePaused","turnOffLoading","fadeOutActive","start","update"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;AACvBC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,a,iBAAAA,a;;AAGbC,MAAAA,a,iBAAAA,a;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;gCAGaQ,c,WADZF,OAAO,CAAC,gBAAD,C,UAEHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,oCAFb,MACaM,cADb,SACoCP,SADpC,CAC8C;AAAA;AAAA;;AAAA;AAAA;;AAI1CS,QAAAA,aAAa,GAAE;AAAA;;AACX,gCAAKC,YAAL,CAAmBC,YAAnB;AAAA;AAAA,6GAAgDC,YAAhD;AACA,cAAG;AAAA;AAAA,0CAAYC,WAAZ,GAA0BC,UAA1B,IAAwC;AAAA;AAAA,8CAAcC,YAAzD,EACI;AAAA;AAAA,0CAAYF,WAAZ,GAA0BC,UAA1B,GAAuC;AAAA;AAAA,8CAAcE,UAArD;AACP;;AAEDC,QAAAA,cAAc,GAAE;AAAA;;AACZ,iCAAKP,YAAL,CAAmBC,YAAnB;AAAA;AAAA,+GAAgDO,aAAhD;AACA,cAAG;AAAA;AAAA,0CAAYL,WAAZ,GAA0BC,UAA1B,IAAwC;AAAA;AAAA,8CAAcC,YAAzD,EACI;AAAA;AAAA,0CAAYF,WAAZ,GAA0BC,UAA1B,GAAuC;AAAA;AAAA,8CAAcE,UAArD;AACP;;AAEDG,QAAAA,KAAK,GAAI,CACL;AACH;;AAEDC,QAAAA,MAAM,GAAI,CACN;AACA;AAEH;;AAxByC,O;;;;;iBAEP,I;;;AAyBvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { _decorator, Component, Node, Game } from 'cc';\nimport { GameManager, GameStatuType } from '../GameManager';\nimport { Task } from '../Tasks/Task';\nimport { TaskManager } from '../Tasks/TaskManager';\nimport { ScriptEffects } from '../Utilities/ScriptEffects';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = LoadingHandler\n * DateTime = Wed Mar 23 2022 21:49:35 GMT+0100 (Central European Standard Time)\n * Author = stickandrope\n * FileBasename = LoadingHandler.ts\n * FileBasenameNoExtension = LoadingHandler\n * URL = db://assets/Scripts/RemoteScripts/LoadingHandler.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\n *\n */\n \n@ccclass('LoadingHandler')\nexport class LoadingHandler extends Component {\n    @property({type: Node})\n    public loadingPanel: Node | null = null;\n\n    turnOnLoading(){\n        this.loadingPanel!.getComponent(ScriptEffects)?.fadeInActive();\n        if(GameManager.getInstance().gameStatus != GameStatuType.gameTutorial) \n            GameManager.getInstance().gameStatus = GameStatuType.gamePaused;\n    }\n\n    turnOffLoading(){\n        this.loadingPanel!.getComponent(ScriptEffects)?.fadeOutActive();\n        if(GameManager.getInstance().gameStatus != GameStatuType.gameTutorial) \n            GameManager.getInstance().gameStatus = GameStatuType.gamePaused;\n    }\n\n    start () {\n        // [3]\n    }\n\n    update () {\n        //if(GameManager.getInstance().downloadedCheckpoint < GameManager.getInstance().TaskManager!.getComponent(TaskManager)?.checkpoints[Number(GameManager.getInstance().Progress)].children[0].getComponent(Task)!.orderNumber! );\n        //    console.log();\n            \n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}