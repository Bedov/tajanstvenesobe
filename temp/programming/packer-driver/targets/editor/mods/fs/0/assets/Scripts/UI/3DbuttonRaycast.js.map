{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/UI/3DbuttonRaycast.ts"],"names":["_decorator","Component","systemEvent","SystemEvent","Vec3","Camera","geometry","PhysicsSystem","GameManager","GameStatuType","DbuttonActivate","ccclass","property","DbuttonRaycast","start","on","EventType","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","node","children","forEach","element","name","cameraObject","sortList","r","sortedArray","sort","a","b","distance","console","log","collider","e","_rayPrazan","ray","getComponent","screenPointToRay","_point","x","y","hit","instance","raycast","raycastResults","rayCastItem","tempItemArray","touchStartItem","getInstance","gameStatus","gameActive","startAnimation","length","pop","maxDepth","depth","rSorted","i","item","shortestDistance","Math","abs","push"],"mappings":"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","sourcesContent":["\r\nimport { _decorator,\r\n    Component,\r\n    math, \r\n    macro,\r\n    Label,\r\n    systemEvent,\r\n    SystemEvent,\r\n    game,\r\n    view,\r\n    Node,\r\n    Vec3,\r\n    Camera,\r\n    Quat,\r\n    director,\r\n    geometry,\r\n    setDisplayStats,\r\n    sys,\r\n    EventKeyboard,\r\n    KeyCode,\r\n    PhysicsRayResult,\r\n    PhysicsSystem,\r\n    RigidBody,\r\n    Layers} from 'cc';\r\nimport { GameManager, GameStatuType } from '../GameManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = DbuttonRaycast\r\n * DateTime = Thu Nov 25 2021 15:49:34 GMT+0100 (Central European Standard Time)\r\n * Author = stickandrope\r\n * FileBasename = 3DbuttonRaycast.ts\r\n * FileBasenameNoExtension = 3DbuttonRaycast\r\n * URL = db://assets/Scripts/3DbuttonRaycast.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n \r\n import { DbuttonActivate } from \"../UI/3DbuttonActivate\";\r\n\r\n@ccclass('DbuttonRaycast')\r\nexport class DbuttonRaycast extends Component {\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    cameraObject! : Node ; \r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n    maxDepth = 15;\r\n\r\n    tempItemArray: Node[] = [];\r\n\r\n    start () {\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_START, this.onTouchStart, this);\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_END, this.onTouchEnd, this);\r\n\r\n        this.node.children.forEach(element => {\r\n            if(element.name == \"Camera\")\r\n                this.cameraObject = element;\r\n        });\r\n    }\r\n\r\n    sortList(r: PhysicsRayResult[]) {\r\n\r\n        var sortedArray = r.sort(   function(a, b) {\r\n            return a.distance - b.distance;\r\n        } );\r\n\r\n       /*var sortedArray: { hitPoint: math.Vec3; }[] = r.sort((n1,n2) => {\r\n            if (n1.distance > n2.distance) {\r\n                return 1;\r\n            }\r\n\r\n            if (n1.distance < n2.distance) {\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        }); */\r\n\r\n        sortedArray.forEach(element => {\r\n            console.log(\"Element: + \" + element.collider.name);\r\n            \r\n        });\r\n\r\n        return sortedArray;\r\n    }\r\n    \r\n\r\n    onTouchEnd(e: any) {\r\n\r\n        var _rayPrazan: geometry.ray = new geometry.ray();\r\n\r\n        this.cameraObject.getComponent(Camera)?.screenPointToRay(e._point.x, e._point.y, _rayPrazan);\r\n\r\n        //var raycast: geometry.Ray = new geometry.Ray(this.node.position.x, this.node.position.y, this.node.position.z, 0, -1, 0);\r\n        var hit: Vec3 = new Vec3();\r\n        var distance = 0; \r\n        console.log(\"OVDE1\");\r\n\r\n        if (PhysicsSystem.instance.raycast(_rayPrazan)) {\r\n            const r = PhysicsSystem.instance.raycastResults;\r\n\r\n            \r\n            \r\n\r\n            r.forEach(rayCastItem => {\r\n                console.log(\"OVDE2 + \" + rayCastItem.collider.node.name);\r\n                this.tempItemArray.forEach(touchStartItem => {\r\n                    console.log(\"TouchStartItem \" + touchStartItem.name);\r\n                    console.log(\"Raycast End item: \" + rayCastItem.collider.node.name);\r\n                    console.log(\"Game status: \" + GameManager.getInstance().gameStatus);\r\n                    \r\n                    if(rayCastItem.collider.node == touchStartItem && GameManager.getInstance().gameStatus == GameStatuType.gameActive) {\r\n                        touchStartItem.getComponent(DbuttonActivate)?.startAnimation();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        while(this.tempItemArray.length)\r\n            this.tempItemArray.pop();\r\n\r\n\r\n        \r\n    }\r\n\r\n    onTouchStart(e: any){\r\n\r\n        var _rayPrazan: geometry.ray = new geometry.ray();\r\n\r\n        this.cameraObject.getComponent(Camera)?.screenPointToRay(e._point.x, e._point.y, _rayPrazan);\r\n\r\n        //var raycast: geometry.Ray = new geometry.Ray(this.node.position.x, this.node.position.y, this.node.position.z, 0, -1, 0);\r\n        var hit: Vec3 = new Vec3();\r\n        var distance = 15; \r\n\r\n        if (PhysicsSystem.instance.raycast(_rayPrazan)) {\r\n            const r = PhysicsSystem.instance.raycastResults;\r\n\r\n            //if( r[0].collider.node.getComponent(DbuttonActivate) )\r\n            //    r[0].collider.node.getComponent(DbuttonActivate)?.startAnimation();\r\n\r\n            if(this.maxDepth > r.length)\r\n                var depth = r.length;\r\n            else\r\n                var depth = this.maxDepth;\r\n\r\n            var rSorted = this.sortList(r);\r\n            \r\n            for (let i = 0; i < r.length; i++) {\r\n                \r\n                const item = rSorted[i];\r\n                var shortestDistance = rSorted[0].distance;\r\n\r\n                if( item.collider.node.getComponent(DbuttonActivate) ) {   \r\n                    if( Math.abs(shortestDistance - item.distance) < distance)  {\r\n                        //item.collider.node.getComponent(DbuttonActivate)?.startAnimation();\r\n                        this.tempItemArray.push(item.collider.node);\r\n                    }\r\n                }\r\n            \r\n            } \r\n        }\r\n    }\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}