{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/BackUp/FirstPersonCameraGroundMovement.ts"],"names":["_decorator","Component","macro","systemEvent","SystemEvent","Node","Vec3","ccclass","property","KEYCODE","W","charCodeAt","S","A","D","Q","E","SHIFT","KEY","shift","_pointerLockGeneral","_keyEvent","FirstPersonCameraGroundMovement","slide","range","onLoad","on","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","copy","_position","node","position","fpsMovement","getComponent","onDestroy","off","update","dt","_keyPresed","creatingFinalVector","add","_finalMoveVector","multiplyQuatVec3","rotation","point","num1","x","num2","y","num3","z","num4","num5","num6","num7","num8","num9","num10","w","num11","num12","vector3","calculateForward","vectorForward","FORWARD","calculateLeft","RIGHT","negative","calculateRight","calculateBack","e","console","log","normalize","multiplyScalar","moveSpeed","keyCode","sviPodignuti","forEach","element"],"mappings":"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","sourcesContent":["\nimport { _decorator,\n    Component,\n    math, \n    macro,\n    Label,\n    systemEvent,\n    SystemEvent,\n    game,\n    view,\n    Node,\n    Vec3,\n    Quat,\n    setDisplayStats,\n    sys,\n    EventKeyboard,\n    KeyCode} from 'cc';\nconst { ccclass, property } = _decorator;\n\nimport { FirstPersonCameraRotate} from \"./FirstPersonCameraRotate\";\n\nconst KEYCODE = {\n    W: 'W'.charCodeAt(0),\n    S: 'S'.charCodeAt(0),\n    A: 'A'.charCodeAt(0),\n    D: 'D'.charCodeAt(0),\n    Q: 'Q'.charCodeAt(0),\n    E: 'E'.charCodeAt(0),\n    SHIFT: macro.KEY.shift,\n}\n\nvar _pointerLockGeneral = false;\nvar _keyEvent = [false];\n\n@ccclass('FirstPersonCameraGroundMovement')\nexport class FirstPersonCameraGroundMovement extends Component {\n\n    @property(Node)\n    tackaOkretanja!: Node;\n \n    @property\n    moveSpeed = 1;\n \n \n    @property({ slide: true, range: [0.05, 0.5, 0.01] })\n    damp = 0.2;\n\n    _gotStartLocation = false;\n\n    _finalMoveVector = new Vec3;\n \n    _position = new Vec3();\n    _keyPresed = false;\n\n\n    fpsMovement!: FirstPersonCameraRotate;\n\n\n    onLoad() {\n        systemEvent.on(SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        systemEvent.on(SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n        Vec3.copy(this._position, this.node.position);\n\n        this.fpsMovement = this.getComponent('FirstPersonCamera') as FirstPersonCameraRotate;\n\n    }\n \n    onDestroy() {\n        systemEvent.off(SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        systemEvent.off(SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    }\n \n    update(dt: number) {\n        /* var vX = Math.cos(this.node.rotation * Math.PI / 180) * this.speed;\n        var vY = Math.sin(this.node.rotation * Math.PI / 180) * this.speed;\n        this.node.x += vX * dt;\n        this.node.y += vY * dt; */\n\n        //Quat.fromEuler(qt_1, this._euler.x, this._euler.y, this._euler.z);\n        //Quat.slerp(qt_1, this.node.rotation, qt_1, dt / this.damp);\n        \n        //this.node.setRotation(qt_1);\n\n        //if(this._keyPresed && this.fpsMovement._pointerLockLocal ) \n        if(this._keyPresed ){\n            this.creatingFinalVector();\n            this.node.position.add(this._finalMoveVector);\n        }\n\n        \n        \n        \n        \n    }\n\n    multiplyQuatVec3(rotation: Quat, point: Vec3)\n    {\n      var num1: number = rotation.x * 2;\n      var num2: number  = rotation.y * 2;\n      var num3: number  = rotation.z * 2;\n      var num4: number  = rotation.x * num1;\n      var num5: number  = rotation.y * num2;\n      var num6: number  = rotation.z * num3;\n      var num7: number  = rotation.x * num2;\n      var num8: number  = rotation.x * num3;\n      var num9: number  = rotation.y * num3;\n      var num10: number  = rotation.w * num1;\n      var num11: number  = rotation.w * num2;\n      var num12: number  = rotation.w * num3;\n      var vector3: Vec3 = new Vec3;\n      vector3.x = ((1.0 - ( num5 +  num6)) *  point.x + ( num7 -  num12) *  point.y + ( num8 +  num11) *  point.z);\n      vector3.y = (( num7 +  num12) *  point.x + (1.0 - ( num4 +  num6)) *  point.y + ( num9 -  num10) *  point.z);\n      vector3.z = (( num8 -  num11) *  point.x + ( num9 +  num10) *  point.y + (1.0 - ( num4 +  num5)) *  point.z);\n      return vector3;\n    }\n\n\n    calculateForward() {\n        var vectorForward = this.multiplyQuatVec3(this.node.rotation, Vec3.FORWARD);\n        \n\n        return vectorForward;\n    }\n\n    calculateLeft() {\n        var vectorForward = this.multiplyQuatVec3(this.node.rotation, Vec3.RIGHT);\n\n        return vectorForward.negative();\n    }\n\n    calculateRight() {\n        var vectorForward = this.multiplyQuatVec3(this.node.rotation, Vec3.RIGHT);\n\n        return vectorForward;\n    }\n\n    calculateBack() {\n        var vectorForward = this.multiplyQuatVec3(this.node.rotation, Vec3.FORWARD);\n\n        return vectorForward.negative();\n    }\n\n    creatingFinalVector() {\n\n        var e = _keyEvent;\n        \n        if(_keyEvent[KEYCODE.W] == true) {\n            console.log('Press W key');\n            this._finalMoveVector.add(this.calculateForward());\n        }\n        if(_keyEvent[KEYCODE.A] == true ) {\n            console.log('Press a key');\n            this._finalMoveVector.add(this.calculateLeft());\n        }\n        if(_keyEvent[KEYCODE.S] == true) {\n            console.log('Press S key');\n            this._finalMoveVector.add(this.calculateBack());\n        }\n        if(_keyEvent[KEYCODE.D] == true) {\n            console.log('Press D key');\n            this._finalMoveVector.add(this.calculateRight());\n         }\n\n        this._finalMoveVector.normalize().multiplyScalar(this.moveSpeed);\n    }\n\n    onKeyUp(e: any) {\n        _keyEvent[e.keyCode] = false;\n        this._finalMoveVector = new Vec3(0,0,0);\n\n        var sviPodignuti = true;\n        _keyEvent.forEach(element => {\n            if(element==true)\n                sviPodignuti = false;\n        });\n\n        if(sviPodignuti)\n            this._keyPresed = false;\n    }\n\n    onKeyDown(e: any) {\n        _keyEvent[e.keyCode] = true;\n        this._keyPresed = true;\n\n        //_keyEvent = e;\n    }\n\n    \n\n};"]}