{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/GameManager.ts"],"names":["_decorator","Component","Node","director","Label","sys","find","DetectTypeOfDevice","DetectTypeOfDeviceElevator","elevator","GlobalManager","JSONloader","LoadingHandler","ccclass","property","GameStatuType","GameManager","Boolean","String","gameTutorial","getInstance","instance","start","elevatorScript","startProgress","Number","activeLevelData","levelProgress","console","log","detectType","getComponent","onLoad","jsonLoader","node","loadingHandler","typeInputResult","Canvas","getChildByName","trophies","setPlatformType","setTheKeyboard","isMobileOrTablet","active","getTaskManager","TaskManager","pushMeToAudioArray","audioComponent","audioArray","push","setVolume","volume","length","forEach","element","name","inputKeyboard","settingsUI","os","OS","ANDROID","IOS","platform","Platform","MOBILE_BROWSER","backToMenu","debugMode","loadScene"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, director, Label, sys, AudioSource, Scene, LightComponent, find, loader, assetManager } from 'cc';\r\nimport { DetectTypeOfDevice } from './DetectTypeOfDevice';\r\nimport { DetectTypeOfDeviceElevator } from './DetectTypeOfDeviceElevator';\r\nimport { elevator, GlobalManager, levelObject } from './GlobalManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = GameManager\r\n * DateTime = Tue Nov 30 2021 13:26:28 GMT+0100 (Central European Standard Time)\r\n * Author = stickandrope\r\n * FileBasename = GameManager.ts\r\n * FileBasenameNoExtension = GameManager\r\n * URL = db://assets/Scripts/GameManager.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n\r\n */\r\nimport { JSONloader } from \"./RemoteScripts/JSONloader\";\r\nimport { LoadingHandler } from './RemoteScripts/LoadingHandler';\r\n\r\n\r\n/*\r\nvar localSceneData = new  levelObject();\r\nexport { localSceneData };\r\n*/\r\n\r\n export enum GameStatuType {\r\n    gamePaused =    0,\r\n    gameActive =   1,\r\n    gameTutorial =   2,\r\n    }\r\n\r\n@ccclass('GameManager')\r\nexport class GameManager extends Component {\r\n\r\n    gameStatus? : GameStatuType = GameStatuType.gameTutorial;\r\n    typeInputResult? : Label ;\r\n    jsonLoader? : JSONloader ;\r\n    loadingHandler? : LoadingHandler;\r\n\r\n    @property(Boolean)\r\n    elevatorScript = false;\r\n\r\n    inputKeyboard? : Node ;\r\n\r\n    settingsUI? : Node;\r\n\r\n    @property(Node)\r\n    Canvas?: Node;\r\n\r\n    @property(Node)\r\n    WorldRoot?: Node;\r\n\r\n    @property(Node)\r\n    TaskManager?: Node;\r\n\r\n    @property(Node)\r\n    Player?: Node;\r\n\r\n    @property(String)\r\n    LevelName?: String;\r\n\r\n    @property(String)\r\n    LanguageName?: String;\r\n\r\n    moveSpeed : number = 1.5;\r\n    invertedRotation : boolean = false;\r\n\r\n    isMobileOrTablet : boolean = false;\r\n\r\n    taskInProgressManager : number = 1;\r\n\r\n    downloadedCheckpoint : number = 0;\r\n\r\n    audioArray?: Array<AudioSource> = [];\r\n\r\n    trophies? : Node ;\r\n\r\n    startProgress: number = 0;\r\n\r\n\r\n    detectType: DetectTypeOfDevice | DetectTypeOfDeviceElevator | undefined ;\r\n\r\n    debugMode = false;\r\n\r\n    public static getInstance(): GameManager {\r\n        if (!this.instance) {\r\n            GameManager.instance = new GameManager();\r\n            \r\n        }\r\n        return GameManager.instance;\r\n    }\r\n\r\n    static instance: GameManager;\r\n\r\n    start() {\r\n        GameManager.instance = this;\r\n\r\n        if(this.elevatorScript) {\r\n\r\n            this.startProgress = Number(GlobalManager.getInstance().activeLevelData!.levelProgress);\r\n\r\n            console.log(\"Start progress\" + this.startProgress);\r\n            \r\n            this.detectType = find(\"Canvas\")!.getComponent(DetectTypeOfDeviceElevator)!;\r\n        \r\n\r\n\r\n            \r\n        } // this.Player!.getComponent(FirstPersonCameraMovementElevator)!;\r\n        else {\r\n            this.detectType = find(\"Canvas\")!.getComponent(DetectTypeOfDevice)!; \r\n        }\r\n    }\r\n\r\n\r\n    onLoad() {\r\n\r\n\r\n        \r\n\r\n        \r\n        \r\n        this.jsonLoader = this.node.getComponent(JSONloader)!;\r\n        this.loadingHandler = this.node.getComponent(LoadingHandler)!;\r\n\r\n        this.typeInputResult = this.Canvas?.getChildByName(\"GenericUI-Input\")?.getChildByName(\"EditBoxPC\")?.getChildByName(\"Result\")!.getComponent(Label)!;\r\n    \r\n        this.trophies = this.Canvas!.getChildByName(\"BottomUI\")!.getChildByName(\"TrofejiLayout\")!;\r\n\r\n\r\n        this.setPlatformType();\r\n    }\r\n\r\n    setTheKeyboard() {\r\n        if(this.isMobileOrTablet) {\r\n\r\n            this.Canvas!.getChildByName(\"GenericUI-Input\")!.getChildByName(\"EditBox\")!.active = true;\r\n            this.Canvas!.getChildByName(\"GenericUI-Input\")!.getChildByName(\"EditBoxPC\")!.active = false;\r\n\r\n            this.typeInputResult = this.Canvas!.getChildByName(\"GenericUI-Input\")!.getChildByName(\"EditBox\")!.getChildByName(\"Result\")!.getComponent(Label)!\r\n\r\n        } else {\r\n            this.Canvas!.getChildByName(\"GenericUI-Input\")!.getChildByName(\"EditBox\")!.active = false;\r\n            this.Canvas!.getChildByName(\"GenericUI-Input\")!.getChildByName(\"EditBoxPC\")!.active = true;\r\n\r\n            this.typeInputResult = this.Canvas!.getChildByName(\"GenericUI-Input\")!.getChildByName(\"EditBoxPC\")!.getChildByName(\"Result\")!.getComponent(Label)!\r\n        }\r\n    }\r\n\r\n    getTaskManager(){\r\n        return this.TaskManager;\r\n    }\r\n\r\n\r\n    pushMeToAudioArray(audioComponent: AudioSource) {\r\n        this.audioArray?.push(audioComponent);\r\n    }\r\n\r\n    setVolume(volume: number){\r\n        console.log(\"Lenght \" +  this.audioArray?.length );\r\n        \r\n        this.audioArray?.forEach(element => {\r\n            console.log(\"element \" + element.name + \"  VOLUME: \" + element.volume);\r\n            \r\n        });\r\n        \r\n        this.audioArray?.forEach(element => {\r\n            element.volume = volume;\r\n            console.log(\"Volumen \" +  element.volume);\r\n        });\r\n    }\r\n\r\n    setPlatformType() {\r\n        this.inputKeyboard = this.Canvas!.getChildByName(\"BottomUI\")!.getChildByName(\"Keyboard\")!;\r\n        this.settingsUI = this.Canvas!.getChildByName(\"Settings\")!;\r\n \r\n        if(sys.os == sys.OS.ANDROID || sys.os == sys.OS.IOS || sys.platform == sys.Platform.MOBILE_BROWSER) \r\n            this.isMobileOrTablet = true;\r\n\r\n        this.setTheKeyboard();\r\n    }\r\n\r\n\r\n\r\n    backToMenu() {\r\n        GlobalManager.getInstance().activeLevelData =  elevator; //  this.findSceneDataByName(\"MainMenuLift1\");\r\n        GlobalManager.getInstance().activeLevelData.levelProgress = 2;\r\n\r\n        if(this.debugMode == true)\r\n            director.loadScene(\"MainMenu\");\r\n        else {\r\n            GlobalManager.getInstance().activeLevelData = elevator;\r\n            director.loadScene(\"MainMenuLift1\");\r\n        }\r\n            \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n"]}