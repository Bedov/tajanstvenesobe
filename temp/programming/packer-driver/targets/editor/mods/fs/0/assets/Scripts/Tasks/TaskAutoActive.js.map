{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/Tasks/TaskAutoActive.ts"],"names":["_decorator","macro","Enum","ScriptEffects","GenericUI","DetectTypeOfDevice","Task","GameManager","JSONimage","JSONquestTekst","ccclass","property","TypeOfTask","TaskAutoActive","String","Boolean","type","start","schedule","checkExecution","REPEAT_FOREVER","isItMyTimeForDownloading","startScheduling","orderNumber","getInstance","downloadedCheckpoint","downloadStarted","fetchTheData","taskType","tekstType","getTekstRemotely","imageType","getImageRemotely","remoteName","jsonLoader","fetchQuestTekst","toString","tekstObject","fetchImageQuestTekst","imageObject","update","isItOkToExecute","taskManager","canvas","getComponent","_moveTutorialEndBool","_lookTutorialEndBool","showTask","loadingHandler","turnOnLoading","scheduleOnce","console","log","turnOffLoading","genericUI","active","fadeInActive","turnOnGenericTaskJSONwithReturn","genericUIimage","turnOnGenericTaskJSONimagewithReturn","lastTask"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, director, Collider, game, Canvas, macro, Sprite, Enum } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nimport { TaskManager } from \"./TaskManager\";\r\nimport { ScriptEffects } from \"../Utilities/ScriptEffects\";\r\nimport { GenericUI } from \"../Utilities/GenericUI\";\r\nimport { DetectTypeOfDevice } from \"../DetectTypeOfDevice\";\r\nimport { Task } from './Task';\r\nimport { GameManager } from '../GameManager';\r\nimport { JSONimage, JSONquestTekst } from '../RemoteScripts/JSONloader';\r\n\r\n\r\nexport enum TypeOfTask {\r\n    tekstType=    0,\r\n    imageType=   1,\r\n    }\r\n\r\n@ccclass('TaskAutoActive')\r\nexport class TaskAutoActive extends Task {\r\n\r\n    myTimeHasCome = true;\r\n\r\n    @property(String)\r\n    remoteName!: String;\r\n\r\n    @property(Boolean)\r\n    lastTask: Boolean = false;\r\n\r\n\r\n    @property ({type:Enum(TypeOfTask)})\r\n    taskType:TypeOfTask = TypeOfTask.tekstType;\r\n\r\n\r\n\r\n    tekstObject: JSONquestTekst = new JSONquestTekst ;\r\n    imageObject: JSONimage = new JSONimage ;\r\n\r\n\r\n\r\n    start(){\r\n        this.schedule(this.checkExecution, 0.1, macro.REPEAT_FOREVER);\r\n        this.schedule(this.isItMyTimeForDownloading, 0.1);\r\n        \r\n    }\r\n\r\n    startScheduling() {\r\n        \r\n    }\r\n\r\n    isItMyTimeForDownloading() {\r\n        if(this.orderNumber <= GameManager.getInstance().downloadedCheckpoint && !this.downloadStarted ) {\r\n            this.fetchTheData();\r\n            this.downloadStarted = true;\r\n        }\r\n            \r\n    }\r\n\r\n    fetchTheData() {\r\n        if(this.taskType == TypeOfTask.tekstType)\r\n            this.getTekstRemotely();\r\n        if(this.taskType == TypeOfTask.imageType)\r\n         this.getImageRemotely();\r\n    }\r\n\r\n    getTekstRemotely() {\r\n        if(this.remoteName != \"\") {\r\n            GameManager.getInstance().jsonLoader?.fetchQuestTekst(this.remoteName.toString(), this.tekstObject)!;\r\n        }\r\n    }\r\n\r\n    getImageRemotely() {\r\n        if(this.remoteName != \"\") {\r\n            GameManager.getInstance().jsonLoader?.fetchImageQuestTekst(this.remoteName.toString(), this.imageObject)!;\r\n        }\r\n    }\r\n\r\n    update() {\r\n\r\n    }\r\n\r\n    checkExecution() {\r\n        if(this.isItOkToExecute() && this.taskManager.canvas?.getComponent(DetectTypeOfDevice)?._moveTutorialEndBool && this.taskManager.canvas?.getComponent(DetectTypeOfDevice)?._lookTutorialEndBool)\r\n            this.showTask();\r\n\r\n        \r\n    }\r\n\r\n\r\n    showTask() {\r\n        if(GameManager.getInstance().downloadedCheckpoint <= this.orderNumber) {\r\n            GameManager.getInstance().loadingHandler?.turnOnLoading();\r\n            this.scheduleOnce(this.showTask, 0.2);\r\n            console.log(\"DownloadedCheckpoint : \" + GameManager.getInstance().downloadedCheckpoint);\r\n\r\n            console.log(\"this.orderNumber : \" + this.orderNumber);\r\n            return;\r\n        }\r\n\r\n        super.showTask();\r\n\r\n       // this.unscheduleAllCallbacks();\r\n\r\n        GameManager.getInstance().loadingHandler?.turnOffLoading();\r\n\r\n        if(this.taskType == TypeOfTask.tekstType) {\r\n            this.taskManager.genericUI!.active = true;\r\n            this.taskManager.genericUI!.getComponent(ScriptEffects)!.fadeInActive();\r\n            this.taskManager.genericUI!.getComponent(GenericUI)!.turnOnGenericTaskJSONwithReturn(this.tekstObject,this); \r\n        }\r\n        if(this.taskType == TypeOfTask.imageType) {\r\n            this.taskManager.genericUIimage!.active = true;\r\n            this.taskManager.genericUIimage!.getComponent(ScriptEffects)!.fadeInActive();\r\n            this.taskManager.genericUIimage!.getComponent(GenericUI)!.turnOnGenericTaskJSONimagewithReturn(this.imageObject,this, this.lastTask); \r\n        }\r\n        \r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}