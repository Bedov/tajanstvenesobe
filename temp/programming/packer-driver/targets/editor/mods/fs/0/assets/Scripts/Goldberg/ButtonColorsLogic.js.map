{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/Goldberg/ButtonColorsLogic.ts"],"names":["_decorator","Component","Material","MeshRenderer","GlobalManager","LevelButtonClicked","ccclass","property","ButtonColorsLogic","start","buttonsArray","push","node","getChildByName","schedule","checkTutorialEnd","setSceneNamesToButtons","getInstance","activeLevelData","levelProgress","refreshColors","findGeneralProgress","unscheduleAllCallbacks","levelArray","levelsArray","index","length","getComponent","levelName","String","sceneName","progress","element","setMaterial","lockedMaterial","lockedButton","finishedMaterial","Number","unlockedMaterial","lockAllButtons","forEach"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, find, Material, Mesh, MeshRenderer, Button } from 'cc';\nimport { globalInformations, GlobalManager, levelStatus } from '../GlobalManager';\nimport { LevelButtonClicked } from '../UI/LevelButtoClicked';\nconst { ccclass, property } = _decorator;\n \n@ccclass('ButtonColorsLogic')\nexport class ButtonColorsLogic extends Component {\n\n    @property(Material)\n    lockedMaterial?: Material ;\n\n    @property(Material)\n    unlockedMaterial?: Material ;\n\n    @property(Material)\n    finishedMaterial?: Material ;\n\n    button1? : Node; \n    button2? : Node; \n    button3? : Node; \n    button4? : Node; \n    button5? : Node; \n\n    buttonsArray : Array<Node> = [];\n\n    start () {\n\n        this.buttonsArray!.push(this.node.getChildByName(\"1\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"2\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"3\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"4\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"5\")!);\n\n        this.schedule(this.checkTutorialEnd,0.5);\n        \n\n        this.setSceneNamesToButtons();\n    }\n\n    checkTutorialEnd(){\n        if( GlobalManager.getInstance().activeLevelData.levelProgress != 0 ) {\n            this.refreshColors( GlobalManager.getInstance().findGeneralProgress());\n            this.unscheduleAllCallbacks();\n        }\n    }\n\n\n\n    setSceneNamesToButtons() {\n        var levelArray = GlobalManager.getInstance().levelsArray;\n\n        for (let index = 0; index < levelArray.length; index++) {\n            \n            this.buttonsArray[index].getComponent(LevelButtonClicked)!.levelName = String (levelArray[index].sceneName);\n        }\n\n        \n    }\n\n    refreshColors(progress: Number) {\n        for (let index = 0; index < this.buttonsArray.length; index++) {\n            const element = this.buttonsArray[index].getComponent(MeshRenderer)!.setMaterial(this.lockedMaterial!, 0);\n        }\n\n        for (let index = 0; index < progress; index++) {\n            this.buttonsArray[index].getComponent(LevelButtonClicked)!.lockedButton = false;\n            const element = this.buttonsArray[index].getComponent(MeshRenderer)!.setMaterial(this.finishedMaterial!, 0);\n        }\n\n        this.buttonsArray[Number(progress)].getComponent(LevelButtonClicked)!.lockedButton = false;\n        this.buttonsArray[Number(progress)].getComponent(MeshRenderer)!.setMaterial(this.unlockedMaterial!, 0);\n    }\n\n    lockAllButtons() {\n        this.buttonsArray.forEach(element => {\n            element.getComponent(LevelButtonClicked)!.lockedButton = true;\n        });\n    }\n\n    // update (deltaTime: number) {\n    //     // [4]\n    // }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}