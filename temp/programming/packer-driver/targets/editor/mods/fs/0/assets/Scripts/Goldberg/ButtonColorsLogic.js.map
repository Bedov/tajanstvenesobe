{"version":3,"sources":["file:///Users/aleksandarbedov/Documents/CocosCreator/tajanstvenesobe2/assets/Scripts/Goldberg/ButtonColorsLogic.ts"],"names":["_decorator","Component","Material","MeshRenderer","GlobalManager","levelStatus","LevelButtonClicked","ccclass","property","ButtonColorsLogic","start","buttonsArray","push","node","getChildByName","refreshColors","findGeneralProgress","setSceneNamesToButtons","generalProgress","index","getInstance","levelsArray","length","status","unlocked","levelArray","getComponent","levelName","String","sceneName","progress","element","setMaterial","lockedMaterial","lockedButton","finishedMaterial","Number","unlockedMaterial","lockAllButtons","forEach"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, find, Material, Mesh, MeshRenderer, Button } from 'cc';\nimport { globalInformations, GlobalManager, levelStatus } from '../GlobalManager';\nimport { LevelButtonClicked } from '../UI/LevelButtoClicked';\nconst { ccclass, property } = _decorator;\n \n@ccclass('ButtonColorsLogic')\nexport class ButtonColorsLogic extends Component {\n\n    @property(Material)\n    lockedMaterial?: Material ;\n\n    @property(Material)\n    unlockedMaterial?: Material ;\n\n    @property(Material)\n    finishedMaterial?: Material ;\n\n    button1? : Node; \n    button2? : Node; \n    button3? : Node; \n    button4? : Node; \n    button5? : Node; \n\n    buttonsArray : Array<Node> = [];\n\n    start () {\n\n        this.buttonsArray!.push(this.node.getChildByName(\"1\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"2\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"3\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"4\")!);\n        this.buttonsArray!.push(this.node.getChildByName(\"5\")!);\n\n        this.refreshColors( this.findGeneralProgress());\n\n        this.setSceneNamesToButtons();\n    }\n\n    findGeneralProgress(){\n        var generalProgress = 0;\n        for (let index = 0; index < GlobalManager.getInstance().levelsArray.length; index++) {\n            //const element = array[index];\n            if(GlobalManager.getInstance().levelsArray[index].status == levelStatus.unlocked) {\n                generalProgress = index;\n                return generalProgress;\n            }\n\n            \n        }\n        return generalProgress;\n    }\n\n    setSceneNamesToButtons() {\n        var levelArray = GlobalManager.getInstance().levelsArray;\n\n        for (let index = 0; index < levelArray.length; index++) {\n            \n            this.buttonsArray[index].getComponent(LevelButtonClicked)!.levelName = String (levelArray[index].sceneName);\n        }\n\n        \n    }\n\n    refreshColors(progress: Number) {\n        for (let index = 0; index < this.buttonsArray.length; index++) {\n            const element = this.buttonsArray[index].getComponent(MeshRenderer)!.setMaterial(this.lockedMaterial!, 0);\n        }\n\n        for (let index = 0; index < progress; index++) {\n            this.buttonsArray[index].getComponent(LevelButtonClicked)!.lockedButton = false;\n            const element = this.buttonsArray[index].getComponent(MeshRenderer)!.setMaterial(this.finishedMaterial!, 0);\n        }\n\n        this.buttonsArray[Number(progress)].getComponent(LevelButtonClicked)!.lockedButton = false;\n        this.buttonsArray[Number(progress)].getComponent(MeshRenderer)!.setMaterial(this.unlockedMaterial!, 0);\n    }\n\n    lockAllButtons() {\n        this.buttonsArray.forEach(element => {\n            element.getComponent(LevelButtonClicked)!.lockedButton = true;\n        });\n    }\n\n    // update (deltaTime: number) {\n    //     // [4]\n    // }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}